<?xml version='1.0' encoding='UTF-8'?>
<frameset>
  <predicate lemma="concrete_over">
    <roleset id="concrete_over.01" name="pour concrete over">
      <aliases>
        <alias pos="v">concrete_over</alias>
      </aliases>
      <roles>
        <role descr="agent, concrete layer" f="PAG" n="0"/>
        <role descr="thing now covered in concrete" f="PPT" n="1"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks/>
      <example src="" name="the one example">
        <text>If the scheme didn't work out then the Bureau would concrete over the site as originally planned.</text>
        <rel relloc="10 11">concrete over</rel>
        <arg f="ADV" n="M" start="0" end="5">If the scheme didn't work out</arg>
        <arg f="ADV" n="M" start="6" end="6">then</arg>
        <arg f="" n="0" start="7" end="8">the Bureau</arg>
        <arg f="MOD" n="M" start="9" end="9">would</arg>
        <arg f="" n="1" start="12" end="13">the site</arg>
        <arg f="ADV" n="M" start="14" end="16">as originally planned.</arg>
      </example>
      <note>CONCRETE_OVER-V NOTES: A simple "concrete" lemma also seems plausible: I would like to concretethe driveway, but this did not occur in any instances, nor could anyexamples of this sort be found in internet research. (from concrete.01-v)</note>
    </roleset>
  </predicate>
  <predicate lemma="concrete">
    <roleset id="concrete.02" name="set in stone, not abstract">
      <aliases>
        <alias pos="j">concrete</alias>
      </aliases>
      <roles>
        <role descr="non-abstract, set in stone thing" f="PPT" n="1"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks/>
      <example src="BOLT-6" name="arg1">
        <text>For under an exam - oriented education system , an exam question for the students has one and only one answer , and the question is also concrete , without divergence or selection .</text>
        <rel relloc="27">concrete</rel>
        <arg f="" n="1" start="23" end="24">the question</arg>
        <arg f="ADV" n="m" start="26" end="26">also</arg>
        <arg f="ADV" n="m" start="29" end="32">without divergence or selection</arg>
      </example>
      <note>CONCRETE-J NOTES: Added by Julia based on BOLT-6. (from concrete.01-j)</note>
    </roleset>
  </predicate>
</frameset>
