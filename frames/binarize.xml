<?xml version='1.0' encoding='UTF-8'?>
<frameset>
  <predicate lemma="binarize">
    <roleset id="binarize.01" name="convert to binary image">
      <aliases>
        <alias pos="v">binarize</alias>
        <alias pos="n">binarization</alias>
      </aliases>
      <roles>
        <role descr="causer of conversion" f="PAG" n="0"/>
        <role descr="entity converted to binary" f="PPT" n="1"/>
        <role descr="binarization into what?" f="PRD" n="2"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="-"/>
      </usagenotes>
      <example src="computational" name="binarize-v">
        <text>We binarize the categorical input so that they can be thought of as a vector from the Euclidean space.</text>
        <rel relloc="1">binarize</rel>
        <arg f="" n="0" start="0" end="0">We</arg>
        <arg f="" n="1" start="2" end="4">the categorical input</arg>
        <arg f="PRP" n="m" start="5" end="18">so that they can be thought of as a vector from the Euclidean space.</arg>
      </example>
      <example src="cryo data" name="binarization-n with Arg2">
        <text>Such binarization into the two major surface classes.</text>
        <rel relloc="1">binarization</rel>
        <arg f="" n="2" start="2" end="7">into the two major surface classes.</arg>
      </example>
      <example src="internet" name="binarization-n with Arg1">
        <text>A multi-scale framework for adaptive binarization of degraded document images.</text>
        <rel relloc="5">binarization</rel>
        <arg f="MNR" n="m" start="4" end="4">adaptive</arg>
        <arg f="" n="1" start="6" end="9">of degraded document images.</arg>
      </example>
      <note>BINARIZATION-N, BINARIZE-V Added by Meredith, no VN or FN frames.</note>
    </roleset>
  </predicate>
</frameset>
