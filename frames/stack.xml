<?xml version="1.0" ?>
<frameset>
   <predicate lemma="stack">
      <roleset id="stack.01" name="set one thing atop another">
         <aliases>
            <alias pos="v">stack</alias>
            <alias pos="n">stacking</alias>
         </aliases>
         <roles>
            <role descr="stacker" f="PAG" n="0">
               <rolelinks>
                  <rolelink class="spray-9.7-2" resource="VerbNet" version="verbnet3.3">agent</rolelink>
                  <rolelink class="spray-9.7-2" resource="VerbNet" version="verbnet3.4">agent</rolelink>
               </rolelinks>
            </role>
            <role descr="one thing" f="PPT" n="1">
               <rolelinks>
                  <rolelink class="spray-9.7-2" resource="VerbNet" version="verbnet3.3">theme</rolelink>
                  <rolelink class="spray-9.7-2" resource="VerbNet" version="verbnet3.4">theme</rolelink>
               </rolelinks>
            </role>
            <role descr="the other thing arg1 istacked onto, destination" f="GOL" n="2">
               <rolelinks>
                  <rolelink class="spray-9.7-2" resource="VerbNet" version="verbnet3.3">destination</rolelink>
                  <rolelink class="spray-9.7-2" resource="VerbNet" version="verbnet3.4">destination</rolelink>
               </rolelinks>
            </role>
         </roles>
         <usagenotes>
            <usage inuse="+" resource="PropBank" version="3.0"/>
            <usage inuse="+" resource="AMR" version="3.0"/>
         </usagenotes>
         <lexlinks>
            <lexlink class="Placing" confidence="0.8" resource="FrameNet" src="manual+strict-conv" version="1.7"/>
            <lexlink class="spray-9.7-2" confidence="0.8" resource="VerbNet" src="manual+strict-conv" version="verbnet3.3"/>
            <lexlink class="stack-v.1" confidence="0.1" resource="onsense" src="annot-overlap" version="on5">3</lexlink>
            <lexlink class="spray-9.7-2" confidence="1.0" resource="VerbNet" src="manualchecks" version="verbnet3.4"/>
         </lexlinks>
         <example name="stack-v: stack on" src="">
            <text>But in recent years, the market has moved toward less expensive ``mini-component'' sets, miniaturized amplifiers and receivers and software players that *trace*-1 could be stacked *trace*-1 on top of each other.</text>
            <rel relloc="24">stacked</rel>
            <arg end="21" f="" n="1" start="21">*trace*-1</arg>
            <arg end="22" f="MOD" n="m" start="22">could</arg>
            <arg end="30" f="" n="2" start="26">on top of each other.</arg>
         </example>
         <example name="stack-v: stack against" src="">
            <text>``Small investors are absolutely dismayed that Wall Street is stacking the deck against them, and these wide swings are scaring them to death,'' says Raymond A. Mason, chairman of regional broker Legg Mason Inc. in Baltimore.</text>
            <rel relloc="9">stacking</rel>
            <arg end="7" f="" n="0" start="6">Wall Street</arg>
            <arg end="11" f="" n="1" start="10">the deck</arg>
            <arg end="13" f="" n="2" start="12">against them,</arg>
         </example>
         <note>STACK-V NOTES: Frames file for 'stack' based on sentences in financial subcorpus. Verbnet class spray-9.7-2, other framed members include hang, seed. Comparison with 'set'. (from stack.01-v predicate notes)</note>
      </roleset>
   </predicate>
   <predicate lemma="stack_up">
      <roleset id="stack_up.02" name="compare, measure up">
         <aliases>
            <alias pos="v">stack_up</alias>
            <alias pos="n">stacking_up</alias>
         </aliases>
         <roles>
            <role descr="thing being assessed" f="PPT" n="1"/>
            <role descr="compared against" f="PPT" n="2"/>
         </roles>
         <usagenotes>
            <usage inuse="+" resource="PropBank" version="3.0"/>
            <usage inuse="+" resource="AMR" version="3.0"/>
         </usagenotes>
         <lexlinks>
            <lexlink class="Evaluative_comparison" confidence="0.8" resource="FrameNet" src="manual+strict-conv" version="1.7"/>
         </lexlinks>
         <example name="stack_up-v: unaccusative" src="">
            <text>It wasn't clear how the ownership would stack up under the new plan, but employees would keep more than 50%.</text>
            <rel relloc="7 8">stack up</rel>
            <arg end="5" f="" n="1" start="4">the ownership</arg>
            <arg end="6" f="MOD" n="m" start="6">would</arg>
            <arg end="12" f="LOC" n="m" start="9">under the new plan,</arg>
         </example>
         <note>STACK_UP-V NOTES: (from stack.02-v)</note>
      </roleset>
      <roleset id="stack_up.03" name="make into a stack">
         <aliases>
            <alias pos="v">stack_up</alias>
            <alias pos="n">stacking_up</alias>
         </aliases>
         <roles>
            <role descr="stacker" f="PAG" n="0"/>
            <role descr="thing(s) being stacked" f="PPT" n="1"/>
         </roles>
         <usagenotes>
            <usage inuse="+" resource="PropBank" version="3.0"/>
            <usage inuse="+" resource="AMR" version="3.0"/>
         </usagenotes>
         <lexlinks/>
         <example name="stack_up-v: big pile" src="">
            <text>John stacked up all his dirty dishes.</text>
            <rel relloc="1 2">stacked up</rel>
            <arg end="0" f="" n="0" start="0">John</arg>
            <arg end="6" f="" n="1" start="3">all his dirty dishes.</arg>
         </example>
         <note>STACK_UP-V NOTES: (from stack.03-v)</note>
      </roleset>
   </predicate>
</frameset>
