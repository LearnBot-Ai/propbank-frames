<?xml version='1.0' encoding='UTF-8'?>
<frameset>
  <predicate lemma="stack">
    <roleset id="stack.01" name="set one thing atop another">
      <aliases>
        <alias pos="v">stack</alias>
        <alias pos="n">stacking</alias>
      </aliases>
      <roles>
        <role descr="stacker" f="PAG" n="0">
          <rolelinks>
            <rolelink resource="VerbNet" class="spray-9.7-2" version="verbnet3.3">agent</rolelink>
          </rolelinks>
        </role>
        <role descr="one thing" f="PPT" n="1">
          <rolelinks>
            <rolelink resource="VerbNet" class="spray-9.7-2" version="verbnet3.3">theme</rolelink>
          </rolelinks>
        </role>
        <role descr="the other thing arg1 istacked onto, destination" f="GOL" n="2">
          <rolelinks>
            <rolelink resource="VerbNet" class="spray-9.7-2" version="verbnet3.3">destination</rolelink>
          </rolelinks>
        </role>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="FrameNet" class="Placing" version="1.7" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="VerbNet" class="spray-9.7-2" version="verbnet3.3" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="onsense" version="on5" class="stack-v.1" src="annot-overlap" confidence="0.1">3</lexlink>
      </lexlinks>
      <example src="" name="stack-v: stack on">
        <text>But in recent years, the market has moved toward less expensive ``mini-component'' sets, miniaturized amplifiers and receivers and software players that *trace*-1 could be stacked *trace*-1 on top of each other.</text>
        <rel relloc="24">stacked</rel>
        <arg f="" n="1" start="21" end="21">*trace*-1</arg>
        <arg f="MOD" n="m" start="22" end="22">could</arg>
        <arg f="" n="2" start="26" end="30">on top of each other.</arg>
      </example>
      <example src="" name="stack-v: stack against">
        <text>``Small investors are absolutely dismayed that Wall Street is stacking the deck against them, and these wide swings are scaring them to death,'' says Raymond A. Mason, chairman of regional broker Legg Mason Inc. in Baltimore.</text>
        <rel relloc="9">stacking</rel>
        <arg f="" n="0" start="6" end="7">Wall Street</arg>
        <arg f="" n="1" start="10" end="11">the deck</arg>
        <arg f="" n="2" start="12" end="13">against them,</arg>
      </example>
      <note>STACK-V NOTES: Frames file for 'stack' based on sentences in financial subcorpus. Verbnet class spray-9.7-2, other framed members include hang, seed. Comparison with 'set'. (from stack.01-v predicate notes)</note>
    </roleset>
  </predicate>
  <predicate lemma="stack_up">
    <roleset id="stack_up.02" name="compare, measure up">
      <aliases>
        <alias pos="v">stack_up</alias>
        <alias pos="n">stacking_up</alias>
      </aliases>
      <roles>
        <role descr="thing being assessed" f="PPT" n="1"/>
        <role descr="compared against" f="PPT" n="2"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="FrameNet" class="Evaluative_comparison" version="1.7" confidence="0.8" src="manual+strict-conv"/>
      </lexlinks>
      <example src="" name="stack_up-v: unaccusative">
        <text>It wasn't clear how the ownership would stack up under the new plan, but employees would keep more than 50%.</text>
        <rel relloc="7 8">stack up</rel>
        <arg f="" n="1" start="4" end="5">the ownership</arg>
        <arg f="MOD" n="m" start="6" end="6">would</arg>
        <arg f="LOC" n="m" start="9" end="12">under the new plan,</arg>
      </example>
      <note>STACK_UP-V NOTES: (from stack.02-v)</note>
    </roleset>
    <roleset id="stack_up.03" name="make into a stack">
      <aliases>
        <alias pos="v">stack_up</alias>
        <alias pos="n">stacking_up</alias>
      </aliases>
      <roles>
        <role descr="stacker" f="PAG" n="0"/>
        <role descr="thing(s) being stacked" f="PPT" n="1"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks/>
      <example src="" name="stack_up-v: big pile">
        <text>John stacked up all his dirty dishes.</text>
        <rel relloc="1 2">stacked up</rel>
        <arg f="" n="0" start="0" end="0">John</arg>
        <arg f="" n="1" start="3" end="6">all his dirty dishes.</arg>
      </example>
      <note>STACK_UP-V NOTES: (from stack.03-v)</note>
    </roleset>
  </predicate>
</frameset>
