<?xml version='1.0' encoding='UTF-8'?>
<frameset>
  <predicate lemma="sum_up">
    <roleset id="sum_up.01" name="summarize">
      <aliases>
        <alias pos="v">sum_up</alias>
      </aliases>
      <roles>
        <role descr="summarizer" f="PAG" n="0"/>
        <role descr="thing summarized" f="PPT" n="1"/>
        <role descr="as, if syntactically neat" f="PRD" n="2"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="FrameNet" class="Summarizing" version="1.7" confidence="0.8" src="manual+strict-conv"/>
      </lexlinks>
      <example src="" name="not syntactically nice">
        <text>As he sums it up: ``We are listening to the market.''</text>
        <rel relloc="2 4">sums up:</rel>
        <arg f="" n="0" start="1" end="1">he</arg>
        <arg f="" n="1" start="3" end="3">it</arg>
      </example>
      <example src="ontonotes nw/wsj/16/wsj_1654" name="ARG0 and ARG1 and ARG2">
        <text>K mart Corp. Chairman Joseph E. Antonini summed up his outlook for the Christmas season as `` not troublesome . ''</text>
        <rel relloc="7 8">summed up</rel>
        <arg f="" n="0" start="0" end="6">K mart Corp. Chairman Joseph E. Antonini</arg>
        <arg f="" n="1" start="9" end="14">his outlook for the Christmas season</arg>
        <arg f="" n="2" start="15" end="18">as `` not troublesome</arg>
      </example>
      <note>SUM_UP-V NOTES: The first example has no constituent holding the utterance. If youwish to do use 'A' (as with split utterances), go right ahead. (from sum.01-v)</note>
    </roleset>
  </predicate>
  <predicate lemma="sum">
    <roleset id="sum.02" name="combine, add, cummulate">
      <aliases>
        <alias pos="v">sum</alias>
        <alias pos="v">summate</alias>
        <alias pos="n">summmation</alias>
      </aliases>
      <roles>
        <role descr="agent" f="PAG" n="0"/>
        <role descr="first thing added or all things" f="PPT" n="1"/>
        <role descr="combined with" f="PPT" n="2"/>
        <role descr="cummulative result" f="PRD" n="3"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="-"/>
      </usagenotes>
      <lexlinks/>
      <example src="" name="summate-v">
        <text>It has of course been a mighty agent in evolution, for those who can summate all their energies in attack have survived.</text>
        <rel relloc="14">summate</rel>
        <arg f="" n="0" start="12" end="12">who</arg>
        <arg f="MOD" n="m" start="13" end="13">can</arg>
        <arg f="" n="1" start="15" end="17">all their energies</arg>
        <arg f="GOL" n="m" start="18" end="19">in attack</arg>
      </example>
      <example src="" name="sum-v">
        <text>Then I summed their two independent rankings and reranked them.</text>
        <rel relloc="2">summed</rel>
        <arg f="TMP" n="m" start="0" end="0">Then</arg>
        <arg f="" n="0" start="1" end="1">I</arg>
        <arg f="" n="1" start="3" end="6">their two independent rankings</arg>
      </example>
      <example src="" name="summation-n">
        <text>The summation of an infinite sequence of values is called a series.</text>
        <rel relloc="1">summation</rel>
        <arg f="" n="1" start="2" end="7">of an infinite sequence of values</arg>
      </example>
      <note>SUM-V, SUMMATE-V, SUMMATION-N NOTES: Added by Julia based on Cryo data.</note>
    </roleset>
  </predicate>
</frameset>
