<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE frameset PUBLIC "-//PB//PropBank Frame v3.4 Transitional//EN" "http://propbank.org/specification/dtds/v3.4/frameset.dtd">
<frameset>
  <predicate lemma="program">
    <roleset id="program.01" name="to design a program">
      <aliases>
        <alias pos="n">programming</alias>
        <alias pos="v">program</alias>
        <alias pos="v">programme</alias>
      </aliases>
      <roles>
        <role descr="programmer, agent" f="PAG" n="0"/>
        <role descr="entity  programmed" f="PPT" n="1"/>
        <role descr="attribute" f="PRD" n="2"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="1.0" inuse="+"/>
        <usage resource="PropBank" version="2.1.5" inuse="+"/>
        <usage resource="PropBank" version="3.1" inuse="+"/>
        <usage resource="PropBank" version="3.4" inuse="+"/>
        <usage resource="AMR" version="2019" inuse="+"/>
        <usage resource="PropBank" version="Flickr 1.0" inuse="+"/>
        <usage resource="AMR" version="Spatial 1.0" inuse="+"/>
        <usage resource="AMR" version="THYME 1.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink class="programme-n.5" confidence="0.1" resource="onsense" src="annot-overlap" version="on5">36</lexlink>
        <lexlink class="program-v.4" confidence="0.1" resource="onsense" src="annot-overlap" version="on5">4</lexlink>
      </lexlinks>
      <example name="with Arg2" src="">
        <text>Larry Biehl , a money manager in San Mateo , Calif. , blames that on the advent of program trading , in which computers used [*] by big institutional investors are programmed [*-2] to buy and sell big blocks when certain market conditions prevail [*T*-3] [*T*-1] .</text>
        <arg type="ARG1" start="?" end="?">[*-2]</arg>
        <arg type="ARG2" start="?" end="?">to buy and sell big blocks when certain market conditions prevail [*T*-3]</arg>
        <rel relloc="31">programmed</rel>
      </example>
      <example name="transitive" src="">
        <text>`` You 'll start [*-1] to see shows where viewers program the program [*T*-2] .</text>
        <arg type="ARG0" start="9" end="9">viewers</arg>
        <arg type="ARG1" start="11" end="12">the program</arg>
        <arg type="ARGM-LOC" start="?" end="?">[*T*-2]</arg>
        <arg type="ARGM-SLC" start="?" end="?">where -&gt; shows</arg>
      <rel relloc="10">program</rel>
        </example>
      <example name="typical" src="">
        <text>programming of the application</text>
        <arg type="ARG1" start="1" end="3">of the application</arg>
        <rel relloc="0">programming</rel>
      </example>
      <example name="non-computer use" src="coastal journal">
        <text>We 're impressed with his programming of the Town History series .</text>
        <arg type="ARG0" start="4" end="4">his</arg>
        <arg type="ARG1" start="6" end="10">of the Town History series</arg>
        <rel relloc="5">programming</rel>
      </example>
      <note>PROGRAM-V NOTES: Frames file for 'program' based on survey of sentences in the WSJ corpus. (from program.01-v predicate notes)</note>
      <note>PROGRAMMING-N NOTES: Based on Thyme and Sharp data. Comparison to program.01. No VN or FN classes. Framed by Katie. (from programming.01-n)</note>
    </roleset>
  </predicate>
</frameset>