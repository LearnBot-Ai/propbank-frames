<?xml version='1.0' encoding='UTF-8'?>
<frameset>
  <predicate lemma="solve">
    <roleset id="solve.01" name="to find a solution to, solving">
      <aliases>
        <alias pos="n">solving</alias>
        <alias pos="n">solution</alias>
        <alias pos="v">solve</alias>
      </aliases>
      <roles>
        <role descr="solver" f="PAG" n="0">
          <rolelinks>
            <rolelink resource="VerbNet" class="discover-84" version="verbnet3.3">agent</rolelink>
          </rolelinks>
        </role>
        <role descr="the problem" f="PPT" n="1">
          <rolelinks>
            <rolelink resource="VerbNet" class="discover-84" version="verbnet3.3">theme</rolelink>
          </rolelinks>
        </role>
        <role descr="manner, the solution itself" f="MNR" n="2"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="FrameNet" class="Resolve_problem" version="1.7" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="VerbNet" class="discover-84" version="verbnet3.3" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="onsense" version="on5" class="solve-v.1" src="annot-overlap" confidence="0.1">18</lexlink>
        <lexlink resource="onsense" version="on5" class="solve-v.2" src="annot-overlap" confidence="0.1">55</lexlink>
      </lexlinks>
      <example src="" name="solve-v: inanimate agent">
        <text>Mr. van Dover added that researchers are trying to determine precisely what crystal changes [*T*]solved the problem .</text>
        <rel relloc="14">[*T*]solved</rel>
        <arg f="" n="0" start="11" end="13">what crystal changes</arg>
        <arg f="" n="1" start="15" end="16">the problem</arg>
      </example>
      <example src="" name="solve-v: all arguments">
        <text>Much the same thing happened with busted S&amp; Ls , a problem [0]-1 Congress just `` solved '' [] with a $ 166 billion [*U*] bailout .</text>
        <rel relloc="16">solved</rel>
        <arg f="" n="0" start="13" end="13">Congress</arg>
        <arg f="TMP" n="m" start="14" end="14">just</arg>
        <arg f="" n="1" start="12" end="12">[0]-1</arg>
        <arg f="SLC" n="m" start="10" end="11">a problem</arg>
        <arg f="" n="2" start="20" end="25">a $ 166 billion [*U*] bailout</arg>
      </example>
      <example src="" name="solving-n: Arg0,1">
        <text>Tilson was a go-getting young man whose skill at finding clues and trace references didn't result in his solving the murders, being always outflanked by Burke's cool intuition.</text>
        <rel relloc="18">solving</rel>
        <arg f="" n="0" start="17" end="17">his</arg>
        <arg f="" n="1" start="19" end="20">the murders,</arg>
      </example>
      <example src="BOLT" name="solution-n: arg 1 and MNR">
        <text>My take it on this is that it 's a very poor solution to the catch - 22 situation hitting most young job - seekers , but that it 's better than the future jobs fund and / or doing nothing .</text>
        <rel relloc="12">solution</rel>
        <arg f="MNR" n="m" start="10" end="11">very poor</arg>
        <arg f="" n="1" start="13" end="24">to the catch - 22 situation hitting most young job - seekers</arg>
      </example>
      <example src="BOLT" name="solution-n: arg 0">
        <text>Once again the Republican solution is a geriatric nut , only this time it 's a relgious fanatic instead of senile warmonger .</text>
        <rel relloc="4">solution</rel>
        <arg f="" n="0" start="3" end="3">Republican</arg>
      </example>
      <note>SOLVE-V NOTES: Based on sentences in WSJ. Member of VNcls discover-84. (from solve.01-v)</note>
      <note>SOLVING-N NOTES: solve.01 (from solving.01-n)</note>
      <note>SOLUTION-N NOTES: Added by Julia based on BOLT, somewhat on solve.01. No corresponding VNcls. (from solution.01-n)</note>
    </roleset>
  </predicate>
</frameset>
