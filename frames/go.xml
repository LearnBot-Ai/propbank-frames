<?xml version='1.0' encoding='UTF-8'?>
<frameset>
  <predicate lemma="go">
    <roleset id="go.01" name="motion">
      <aliases>
        <alias pos="v">go</alias>
      </aliases>
      <roles>
        <role descr="entity in motion/goer" f="PPT" n="1">
          <rolelinks>
            <rolelink resource="VerbNet" class="meander-47.7" version="verbnet3.3">theme</rolelink>
            <rolelink resource="VerbNet" class="escape-51.1" version="verbnet3.3">theme</rolelink>
            <rolelink resource="FrameNet" class="Motion" version="1.7">theme</rolelink>
          </rolelinks>
        </role>
        <role descr="extent" f="EXT" n="2"/>
        <role descr="start point" f="DIR" n="3">
          <rolelinks>
            <rolelink resource="FrameNet" class="Motion" version="1.7">source</rolelink>
          </rolelinks>
        </role>
        <role descr="end point, end state of arg1" f="GOL" n="4">
          <rolelinks>
            <rolelink resource="FrameNet" class="Motion" version="1.7">goal</rolelink>
            <rolelink resource="FrameNet" class="Motion" version="1.7">path</rolelink>
          </rolelinks>
        </role>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="FrameNet" class="Motion" version="1.7" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="VerbNet" class="meander-47.7" version="verbnet3.3" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="VerbNet" class="escape-51.1" version="verbnet3.3" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="ERE" class="Transportperson" version="rich" confidence="0.1" src="reo-expansion"/>
        <lexlink resource="ERE" class="Transportartifact" version="rich" confidence="0.1" src="reo-expansion"/>
        <lexlink resource="onsense" version="on5" class="go-v.1" src="annot-overlap" confidence="0.1">187</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.4" src="annot-overlap" confidence="0.1">34</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.2" src="annot-overlap" confidence="0.1">20</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.15" src="annot-overlap" confidence="0.1">14</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.10" src="annot-overlap" confidence="0.1">31</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.11" src="annot-overlap" confidence="0.1">4</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.5" src="annot-overlap" confidence="0.1">17</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.7" src="annot-overlap" confidence="0.1">3</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.14" src="annot-overlap" confidence="0.1">6</lexlink>
      </lexlinks>
      <example src="start and end points" name="go-v: start and end points">
        <text>What flights go from Seattle to Boston via Minneapolis?</text>
        <rel relloc="2">go</rel>
        <arg f="" n="1" start="0" end="1">What flights</arg>
        <arg f="" n="3" start="3" end="4">from Seattle</arg>
        <arg f="" n="4" start="5" end="6">to Boston</arg>
        <arg f="LOC" n="m" start="7" end="8">via Minneapolis?</arg>
      </example>
      <example src="extent" name="go-v: extent">
        <text>Imports have gone down 33%</text>
        <rel relloc="2">gone</rel>
        <arg f="" n="1" start="0" end="0">Imports</arg>
        <arg f="DIR" n="m" start="3" end="3">down</arg>
        <arg f="" n="2" start="4" end="4">33%</arg>
      </example>
      <example src="extent and end point" name="go-v: extent and end point">
        <text>Woolworth went up 1 3/4 to 59 1/2.</text>
        <rel relloc="1">went</rel>
        <arg f="" n="1" start="0" end="0">Woolworth</arg>
        <arg f="DIR" n="m" start="2" end="2">up</arg>
        <arg f="" n="2" start="3" end="4">1 3/4</arg>
        <arg f="" n="4" start="5" end="7">to 59 1/2.</arg>
      </example>
      <example src="with direction" name="go-v: with direction, don't be fooled by animate subject! This movement is not construed as self-directed here!">
        <text>[A lot of people]-1 would like TRACE-1 to go back to 1970.</text>
        <rel relloc="8">go</rel>
        <arg f="" n="1" start="6" end="6">TRACE-1</arg>
        <arg f="DIR" n="m" start="9" end="9">back</arg>
        <arg f="" n="4" start="10" end="11">to 1970.</arg>
      </example>
      <example src="as 'extend'" name="go-v: as 'extend'">
        <text>At closely held Deltec Securities Corp., junk bond money managers Amy K. Minella and Hannah H. Strasser say the problems of the junk market go deeper than a temporary malaise.</text>
        <rel relloc="24">go</rel>
        <arg f="" n="1" start="18" end="23">the problems of the junk market</arg>
        <arg f="" n="4" start="25" end="29">deeper than a temporary malaise.</arg>
      </example>
      <example src="and keep going!" name="go-v: and keep going!">
        <text>The protesters who greeted Mikhail Gorbachev at East Berlin's airport earlier this month weren't shouting ``Go U.S.A'' -- they were chanting ``Gorby, Help Us.''</text>
        <rel relloc="15">``Go</rel>
        <arg f="" n="1" start="16" end="16">U.S.A''</arg>
      </example>
      <note>GO-V NOTES: Member of VNcls meander-47.7, escape-51.1-2. (from go.01-v)</note>
      <note>Treebank uses every possible syntax for the stock-report usage of this sense. You'll have to dig into constituents to pull these args apart. The "direction" arg is more mandatory than the ArgM label would suggest. (from go.01-v)</note>
    </roleset>
    <roleset id="go.02" name="self-directed motion, disapear or go away">
      <aliases>
        <alias pos="v">go</alias>
        <alias pos="n">going</alias>
        <alias pos="j">gone</alias>
      </aliases>
      <roles>
        <role descr="goer" f="PPT" n="0">
          <rolelinks>
            <rolelink resource="VerbNet" class="escape-51.1" version="verbnet3.3">theme</rolelink>
            <rolelink resource="FrameNet" class="Motion" version="1.7">theme</rolelink>
          </rolelinks>
        </role>
        <role descr="journey" f="PPT" n="1"/>
        <role descr="start point" f="DIR" n="3">
          <rolelinks>
            <rolelink resource="FrameNet" class="Motion" version="1.7">source</rolelink>
          </rolelinks>
        </role>
        <role descr="end point" f="GOL" n="4">
          <rolelinks>
            <rolelink resource="FrameNet" class="Motion" version="1.7">goal</rolelink>
            <rolelink resource="FrameNet" class="Motion" version="1.7">path</rolelink>
          </rolelinks>
        </role>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="FrameNet" class="Motion" version="1.7" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="FrameNet" class="Waver_between_options" version="1.7" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="VerbNet" class="escape-51.1" version="verbnet3.3" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="ERE" class="Transportperson" version="rich" confidence="0.1" src="reo-expansion"/>
        <lexlink resource="ERE" class="Transportartifact" version="rich" confidence="0.1" src="reo-expansion"/>
        <lexlink resource="onsense" version="on5" class="go-v.10" src="annot-overlap" confidence="0.1">7</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.1" src="annot-overlap" confidence="0.1">682</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.2" src="annot-overlap" confidence="0.1">49</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.3" src="annot-overlap" confidence="0.1">3</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.4" src="annot-overlap" confidence="0.1">13</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.14" src="annot-overlap" confidence="0.1">17</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.15" src="annot-overlap" confidence="0.1">14</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.7" src="annot-overlap" confidence="0.1">9</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.9" src="annot-overlap" confidence="0.1">30</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.12" src="annot-overlap" confidence="0.1">5</lexlink>
      </lexlinks>
      <example src="journey" name="go-v: journey">
        <text>He and two colleagues went on an overnight fishing trip.</text>
        <rel relloc="4">went</rel>
        <arg f="" n="0" start="0" end="3">He and two colleagues</arg>
        <arg f="" n="1" start="5" end="9">on an overnight fishing trip.</arg>
      </example>
      <example src="end point" name="go-v: end point">
        <text>The lawyers went to work</text>
        <rel relloc="2">went</rel>
        <arg f="" n="0" start="0" end="1">The lawyers</arg>
        <arg f="" n="4" start="3" end="4">to work</arg>
      </example>
      <example src="with manner" name="go-v: with manner">
        <text>Currently in the middle of a four-week, 20-city tour as a solo pianist, Mr. Glass has left behind his synthesizers, equipment and collaborators in favor of [*] going it alone.</text>
        <rel relloc="27">going</rel>
        <arg f="" n="0" start="13" end="14">Mr. Glass</arg>
        <arg f="" n="1" start="28" end="28">it</arg>
        <arg f="MNR" n="m" start="29" end="29">alone.</arg>
      </example>
      <example src="as nominal" name="going-n: as nominal">
        <text>``I think Bush's going there is a helpful sign,'' said Sen. Terry Sanford (D., N.C.) a member of the Foreign Relations Committee who pushed to provide Costa Rica about the same amount of aid as it received last year.</text>
        <rel relloc="3">going</rel>
        <arg f="" n="0" start="1" end="2">think Bush's</arg>
        <arg f="" n="4" start="4" end="4">there</arg>
      </example>
      <example src="" name="gone-j: go on vacation, leave habitual places">
        <text>I am gone for three weeks on vacation.</text>
        <rel relloc="2">gone</rel>
        <arg f="" n="0" start="0" end="0">I</arg>
        <arg f="TMP" n="m" start="3" end="5">for three weeks</arg>
        <arg f="" n="1" start="6" end="7">on vacation.</arg>
      </example>
      <example src="" name="gone-j: MIA">
        <text>The pen is gone.</text>
        <rel relloc="3">gone.</rel>
        <arg f="" n="0" start="0" end="1">The pen</arg>
      </example>
      <example src="" name="gone-j: Gone from place">
        <text>I am gone from the forum for two days and what happens?</text>
        <rel relloc="2">gone</rel>
        <arg f="" n="0" start="0" end="0">I</arg>
        <arg f="" n="3" start="3" end="5">from the forum</arg>
        <arg f="TMP" n="m" start="6" end="8">for two days</arg>
      </example>
      <note>GO-V NOTES: Member of VNcls escape-51.1-2. (from go.02-v)</note>
      <note>GONE-J NOTES: Based on Thyme and Sharp data. Comparison to and extention of go.02 and leave.01. Go.02 is a member of VN class escape-51.1-2. Leave.01 is a member of VN classes escape-51.1-1, leave-51.2-1, and resign-10.11. Framed by Katie. (from gone.01-j)</note>
      <note>GO-V NOTES: This is an incorrect parse from Treebank; "be gone" is clearly notpassive but rather copula+adjective. I hope this is anisolated example (it's not, unfortunately) (from go.13-v)</note>
    </roleset>
    <roleset id="go.03" name="pursue (often with after)">
      <aliases>
        <alias pos="v">go</alias>
      </aliases>
      <roles>
        <role descr="pursuer" f="PAG" n="0"/>
        <role descr="goal" f="PPT" n="1"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="FrameNet" class="Cotheme" version="1.7" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="ERE" class="Transportperson" version="rich" confidence="0.1" src="reo-expansion"/>
        <lexlink resource="onsense" version="on5" class="go-v.1" src="annot-overlap" confidence="0.1">20</lexlink>
      </lexlinks>
      <example src="go after" name="go-v: go after">
        <text>Portfolio managers go after the highest rates.</text>
        <rel relloc="2">go</rel>
        <arg f="" n="0" start="0" end="1">Portfolio managers</arg>
        <arg f="" n="1" start="3" end="6">after the highest rates.</arg>
      </example>
      <note>GO-V NOTES: No VNcls. (from go.03-v)</note>
    </roleset>
    <roleset id="go.04" name="modal / future">
      <aliases>
        <alias pos="v">go</alias>
      </aliases>
      <roles/>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="-"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="onsense" version="on5" class="go-v.7" src="annot-overlap" confidence="0.1">683</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.1" src="annot-overlap" confidence="0.1">7</lexlink>
      </lexlinks>
      <example src="modal" name="go-v: modal">
        <text>I'm going to eat lunch now.</text>
        <rel relloc="1">going</rel>
      </example>
      <note>GO-V NOTES: No VNcls. (from go.04-v)</note>
      <note>Do not tag! (leave the rel, of course). (from go.04-v)</note>
    </roleset>
    <roleset id="go.05" name="serial verb construction">
      <aliases>
        <alias pos="v">go</alias>
      </aliases>
      <roles>
        <role descr="subject" f="PAG" n="0"/>
        <role descr="subsequent action" f="PPT" n="1"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="onsense" version="on5" class="go-v.1" src="annot-overlap" confidence="0.1">24</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.14" src="annot-overlap" confidence="0.1">26</lexlink>
      </lexlinks>
      <example src="very typical" name="go-v: very typical">
        <text>He went *trace* looking for a replacement for Mr. Landry.</text>
        <rel relloc="1">went</rel>
        <arg f="" n="0" start="0" end="0">He</arg>
        <arg f="" n="1" start="2" end="9">*trace* looking for a replacement for Mr. Landry.</arg>
      </example>
      <note>GO-V NOTES: This is dangerously close to the modal construction, except there's no"to" (ie, "I'm going to leave now"). Includes the idiom "go begging". (from go.05-v)</note>
    </roleset>
    <roleset id="go.06" name="proceed (with a variety of prepositions)">
      <aliases>
        <alias pos="v">go</alias>
        <alias pos="n">go</alias>
      </aliases>
      <roles>
        <role descr="entity proceeding" f="PAG" n="0"/>
        <role descr="project" f="PPT" n="1"/>
        <role descr="direction, usually a particle" f="DIR" n="2"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="FrameNet" class="Scrutiny" version="1.7" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="FrameNet" class="Forgoing" version="1.7" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="onsense" version="on5" class="go-v.5" src="annot-overlap" confidence="0.1">28</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.1" src="annot-overlap" confidence="0.1">90</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.4" src="annot-overlap" confidence="0.1">22</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.15" src="annot-overlap" confidence="0.1">15</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.7" src="annot-overlap" confidence="0.1">3</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.10" src="annot-overlap" confidence="0.1">5</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.14" src="annot-overlap" confidence="0.1">21</lexlink>
      </lexlinks>
      <example src="transitive and direction" name="go-v: transitive and direction">
        <text>Boeing goes ahead with its plans for the 767.</text>
        <rel relloc="1">goes</rel>
        <arg f="" n="0" start="0" end="0">Boeing</arg>
        <arg f="" n="2" start="2" end="2">ahead</arg>
        <arg f="" n="1" start="3" end="8">with its plans for the 767.</arg>
      </example>
      <example src="intransitive, direction only" name="go-v: intransitive, direction only">
        <text>Mrs. Yeagin went into education.</text>
        <rel relloc="2">went</rel>
        <arg f="" n="0" start="0" end="1">Mrs. Yeagin</arg>
        <arg f="" n="2" start="3" end="4">into education.</arg>
      </example>
      <example src="ergative" name="go-v: ergative">
        <text>Boeing's plans for the 767 went without a hitch.</text>
        <rel relloc="5">went</rel>
        <arg f="" n="1" start="0" end="1">Boeing's plans</arg>
        <arg f="MNR" n="m" start="6" end="8">without a hitch.</arg>
      </example>
      <example src="transitive, no direction" name="go-v: transitive, no direction">
        <text>They went about it with a systematic approach.</text>
        <rel relloc="3 5">it a</rel>
        <arg f="" n="0" start="0" end="0">They</arg>
        <arg f="" n="1" start="2" end="3">about it</arg>
        <arg f="MNR" n="m" start="4" end="7">with a systematic approach.</arg>
      </example>
      <example src="" name="go-n: Light verb 'give the go_ahead'">
        <text>Coulson 'gave the go-ahead for Royal phone hacking'.</text>
        <rel relloc="3">go-ahead</rel>
        <arg f="" n="0" start="0" end="0">Coulson</arg>
        <arg f="LVB" n="m" start="1" end="1">'gave</arg>
        <arg f="" n="2" start="2" end="2">the</arg>
        <arg f="" n="1" start="4" end="7">for Royal phone hacking'.</arg>
      </example>
      <note>GO-V NOTES: No VNcls. (from go.06-v)</note>
    </roleset>
    <roleset id="go.07" name="sell">
      <aliases>
        <alias pos="v">go</alias>
      </aliases>
      <roles>
        <role descr="commodity" f="PPT" n="1"/>
        <role descr="buyer" f="GOL" n="2"/>
        <role descr="price" f="VSP" n="3"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="onsense" version="on5" class="go-v.15" src="annot-overlap" confidence="0.1">3</lexlink>
      </lexlinks>
      <example src="unaccusative with price" name="go-v: unaccusative with price">
        <text>Chateau Yquem now goes for $100 a bottle</text>
        <rel relloc="3">goes</rel>
        <arg f="" n="1" start="0" end="1">Chateau Yquem</arg>
        <arg f="TMP" n="m" start="2" end="2">now</arg>
        <arg f="" n="3" start="4" end="7">for $100 a bottle</arg>
      </example>
      <note>GO-V NOTES: No VNcls. (from go.07-v)</note>
    </roleset>
    <roleset id="go.08" name="become">
      <aliases>
        <alias pos="v">go</alias>
      </aliases>
      <roles>
        <role descr="object" f="PPT" n="1">
          <rolelinks>
            <rolelink resource="VerbNet" class="31.3-2" version="UNK">experiencer</rolelink>
          </rolelinks>
        </role>
        <role descr="attribute of arg1" f="PRD" n="2"/>
        <role descr="with reference to what" f="PAG" n="3">
          <rolelinks>
            <rolelink resource="VerbNet" class="31.3-2" version="UNK">stimulus</rolelink>
          </rolelinks>
        </role>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="FrameNet" class="Becoming" version="1.7" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="FrameNet" class="Losing_it" version="1.7" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="VerbNet" class="31.3-2" version="UNK" confidence="0.0" src="manual+strict-conv"/>
        <lexlink resource="AidaOntology" version="Jan2019" class="Personnel.StartPosition.Hiring" confidence="0.1" src="reo-expansion"/>
        <lexlink resource="ERE" class="Startposition" version="rich" confidence="0.1" src="reo-expansion"/>
        <lexlink resource="onsense" version="on5" class="go-v.4" src="annot-overlap" confidence="0.1">89</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.15" src="annot-overlap" confidence="0.1">4</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.1" src="annot-overlap" confidence="0.1">7</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.14" src="annot-overlap" confidence="0.1">4</lexlink>
      </lexlinks>
      <example src="go private" name="go-v: go private">
        <text>Georgia Gulf will go private.</text>
        <rel relloc="3">go</rel>
        <arg f="" n="1" start="0" end="1">Georgia Gulf</arg>
        <arg f="" n="2" start="4" end="4">private.</arg>
      </example>
      <example src="go off" name="go-v: go off">
        <text>The lights went off last night.</text>
        <rel relloc="2">went</rel>
        <arg f="" n="1" start="0" end="1">The lights</arg>
        <arg f="" n="2" start="3" end="3">off</arg>
        <arg f="TMP" n="m" start="4" end="5">last night.</arg>
      </example>
      <example src="with another argument" name="go-v: with another argument">
        <text>Contel's Mr. Wohlstetter said the group of Big Board companies isn't ready [*]to go public yet with its effort, and that he doesn't plan to be the leader once it is public.</text>
        <rel relloc="13">go</rel>
        <arg f="" n="1" start="4" end="9">the group of Big Board companies</arg>
        <arg f="" n="2" start="14" end="14">public</arg>
        <arg f="TMP" n="m" start="15" end="15">yet</arg>
        <arg f="" n="3" start="16" end="18">with its effort,</arg>
      </example>
      <example src="less become, more continue" name="go-v: less become, more continue">
        <text>What's more, the losses they and the others caused ``are just what we are stumbling over,'' says Mr. Stapf, adding that the majority of misdeeds probably go [*-6] undetected.</text>
        <rel relloc="26">go</rel>
        <arg f="" n="1" start="21" end="24">the majority of misdeeds</arg>
        <arg f="ADV" n="m" start="25" end="25">probably</arg>
        <arg f="" n="2" start="28" end="28">undetected.</arg>
      </example>
      <note>GO-V NOTES: Related to VNcls marvel-31.3 (go_apeshit, go_ballistic are members, but not just plain 'go'.) (from go.08-v)</note>
      <note>Use this sense for inceptive uses of go, such as become at war - to start war.</note>
    </roleset>
    <roleset id="go.09" name="operate">
      <aliases>
        <alias pos="v">go</alias>
      </aliases>
      <roles>
        <role descr="thing going" f="PPT" n="1"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="onsense" version="on5" class="go-v.5" src="annot-overlap" confidence="0.1">3</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.11" src="annot-overlap" confidence="0.1">5</lexlink>
      </lexlinks>
      <example src="work" name="go-v: work">
        <text>[The order printers]-1 start *trace*-1 to go on the trading floor.</text>
        <rel relloc="6">go</rel>
        <arg f="" n="1" start="4" end="4">*trace*-1</arg>
        <arg f="LOC" n="m" start="7" end="10">on the trading floor.</arg>
      </example>
      <note>GO-V NOTES: No VNcls. (from go.09-v)</note>
    </roleset>
    <roleset id="go.10" name="benefactive">
      <aliases>
        <alias pos="v">go</alias>
      </aliases>
      <roles>
        <role descr="thing going" f="PPT" n="1"/>
        <role descr="receiver" f="GOL" n="2"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="onsense" version="on5" class="go-v.1" src="annot-overlap" confidence="0.1">16</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.13" src="annot-overlap" confidence="0.1">8</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.2" src="annot-overlap" confidence="0.1">6</lexlink>
      </lexlinks>
      <example src="with receiver" name="go-v: with receiver">
        <text>The rest went to investors from France and Hong Kong.</text>
        <rel relloc="2">went</rel>
        <arg f="" n="1" start="0" end="1">The rest</arg>
        <arg f="" n="2" start="3" end="9">to investors from France and Hong Kong.</arg>
      </example>
      <example src="with purpose" name="go-v: with purpose">
        <text>$455 million will go for antitrust enforcement.</text>
        <rel relloc="3">go</rel>
        <arg f="" n="1" start="0" end="1">$455 million</arg>
        <arg f="PRP" n="m" start="4" end="6">for antitrust enforcement.</arg>
      </example>
      <example src="go with" name="go-v: go with">
        <text>Bethlehem-1 had little choice but [*]-1 to go with a European steelmaker, because its competitors already have tapped the Japanese and South Korean industry leaders, analysts noted.</text>
        <rel relloc="7">go</rel>
        <arg f="" n="1" start="5" end="5">[*]-1</arg>
        <arg f="" n="2" start="8" end="11">with a European steelmaker,</arg>
      </example>
      <note>GO-V NOTES: No VNcls. (from go.10-v)</note>
    </roleset>
    <roleset id="go.11" name="serve">
      <aliases>
        <alias pos="v">go</alias>
      </aliases>
      <roles>
        <role descr="thing going" f="PAG" n="1"/>
        <role descr="purpose" f="PRP" n="2"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="onsense" version="on5" class="go-v.15" src="annot-overlap" confidence="0.1">4</lexlink>
      </lexlinks>
      <example src="only in TV criminal/courtroom dramas?" name="go-v: only in TV criminal/courtroom dramas?">
        <text>The crime goes to character.</text>
        <rel relloc="2">goes</rel>
        <arg f="" n="1" start="0" end="1">The crime</arg>
        <arg f="" n="2" start="3" end="4">to character.</arg>
      </example>
      <example src="goes without saying" name="go-v: goes without saying">
        <text>Which [*T*] goes [*-2]to show that the First Law applies in insurance as in anything else: There is no free lunch, there isonly marketing.</text>
        <rel relloc="2">goes</rel>
        <arg f="" n="1" start="0" end="0">Which</arg>
        <arg f="" n="2" start="3" end="23">[*-2]to show that the First Law applies in insurance as in anything else: There is no free lunch, there isonly marketing.</arg>
      </example>
      <example src="" name="go-v: with GOL">
        <text>That goes for Isreal too , if Egypt or Syria were anything worthwhile , Isreal would n't of got what they did .</text>
        <rel relloc="1">goes</rel>
        <arg f="" n="1" start="0" end="0">That</arg>
        <arg f="GOL" n="m" start="2" end="4">for Isreal too</arg>
      </example>
      <note>GO-V NOTES: This seems close to the benefactive, hence its placement here. I also read the purpose clause as goes "to prove character". (from go.11-v)</note>
    </roleset>
    <roleset id="go.12" name="experience, undergo">
      <aliases>
        <alias pos="v">go</alias>
      </aliases>
      <roles>
        <role descr="experiencer" f="PPT" n="1"/>
        <role descr="experienced" f="PAG" n="2"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="onsense" version="on5" class="go-v.15" src="annot-overlap" confidence="0.1">31</lexlink>
        <lexlink resource="onsense" version="on5" class="go-v.1" src="annot-overlap" confidence="0.1">8</lexlink>
      </lexlinks>
      <example src="oh the agony" name="go-v: oh the agony">
        <text>This market is still going through its pains</text>
        <rel relloc="4">going</rel>
        <arg f="" n="1" start="0" end="1">This market</arg>
        <arg f="DIS" n="m" start="3" end="3">still</arg>
        <arg f="" n="2" start="5" end="7">through its pains</arg>
      </example>
      <note>GO-V NOTES: Be wary of the distinction with motion through some medium, such as"John goes through the park on his way to school."(from go.12-v)</note>
    </roleset>
    <roleset id="go.14" name="be left">
      <aliases>
        <alias pos="v">go</alias>
      </aliases>
      <roles>
        <role descr="thing left" f="PPT" n="1"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="onsense" version="on5" class="go-v.1" src="annot-overlap" confidence="0.1">4</lexlink>
      </lexlinks>
      <example src="left" name="go-v: left">
        <text>With 15 seconds of trading [0]-1 *trace*-1 to go, ...</text>
        <rel relloc="8">go,</rel>
        <arg f="" n="1" start="6" end="6">*trace*-1</arg>
        <arg f="SLC" n="m" start="1" end="4">15 seconds of trading</arg>
      </example>
      <note>GO-V NOTES: always infinitival? (from go.14-v)</note>
    </roleset>
    <roleset id="go.21" name="have on your side">
      <aliases>
        <alias pos="v">go</alias>
      </aliases>
      <roles>
        <role descr="thing on your side, supporter" f="PPT" n="1"/>
        <role descr="beneficiary, supported" f="GOL" n="2"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <example src="the only thing?" name="go-v: the only thing?">
        <text>The one thing [0] Mr. Phillips clearly does have []going for him is continuity, although it isn't certain if that will be enough.</text>
        <rel relloc="9">[]going</rel>
        <arg f="" n="1" start="3" end="3">[0]</arg>
        <arg f="SLC" n="m" start="0" end="2">The one thing</arg>
        <arg f="" n="2" start="10" end="11">for him</arg>
      </example>
      <note>GO-V NOTES: No VNcls. (from go.21-v)</note>
    </roleset>
    <roleset id="go.22" name="go with, match, accompany">
      <aliases>
        <alias pos="v">go</alias>
      </aliases>
      <roles>
        <role descr="topic" f="PPT" n="1"/>
        <role descr="what you get for free, matching thing" f="COM" n="2"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="FrameNet" class="Compatibility" version="1.7" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="onsense" version="on5" class="go-v.8" src="annot-overlap" confidence="0.1">4</lexlink>
      </lexlinks>
      <example src="and a set of Ginsu knives" name="go-v: and a set of Ginsu knives">
        <text>Instead, they focus on events in department stores and pour their promotional budgets into gifts that-1 []go along with purchases.</text>
        <rel relloc="16">[]go</rel>
        <arg f="" n="1" start="15" end="15">that-1</arg>
        <arg f="SLC" n="m" start="14" end="14">gifts</arg>
        <arg f="" n="2" start="17" end="19">along with purchases.</arg>
      </example>
      <note>GO-V NOTES: No VNcls. (from go.22-v)</note>
    </roleset>
    <roleset id="go.23" name="say">
      <aliases>
        <alias pos="v">go</alias>
      </aliases>
      <roles>
        <role descr="Sayer" f="PAG" n="0"/>
        <role descr="Utterance" f="PPT" n="1"/>
        <role descr="Hearer" f="GOL" n="2"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="onsense" version="on5" class="go-v.6" src="annot-overlap" confidence="0.1">6</lexlink>
      </lexlinks>
      <example src="non-agentive speaker" name="go-v: non-agentive speaker">
        <text>The old saying goes: 'Officials come and go, but yamen [government offices in feudal China]-1 are made [*]-1 of iron.'</text>
        <rel relloc="3">goes:</rel>
        <arg f="" n="0" start="0" end="2">The old saying</arg>
        <arg f="" n="1" start="4" end="19">'Officials come and go, but yamen [government offices in feudal China]-1 are made [*]-1 of iron.'</arg>
      </example>
      <note>GO-V NOTES: predicate added by Arrick (from go.23-v)</note>
    </roleset>
    <roleset id="go.24" name="existential">
      <aliases>
        <alias pos="v">go</alias>
      </aliases>
      <roles>
        <role descr="here, there" f="ADV" n="m"/>
        <role descr="fixed: you" f="PPT" n="1"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <example src="existential there" name="go-v: existential there">
        <text>Well there you go.</text>
        <rel relloc="3">go.</rel>
        <arg f="DIS" n="m" start="0" end="0">Well</arg>
        <arg f="ADV" n="m" start="1" end="1">there</arg>
        <arg f="" n="1" start="2" end="2">you</arg>
      </example>
      <note>GO-V NOTES: predicate added by Arrick (from go.24-v)</note>
    </roleset>
    <roleset id="go.29" name="potty">
      <aliases>
        <alias pos="v">go</alias>
      </aliases>
      <roles>
        <role descr="potty-er" f="PAG" n="0"/>
        <role descr="duty done" f="PPT" n="1"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <example src="" name="go-v: Arg 0 only">
        <text>He was still going two-to-three times a day which was his norm.</text>
        <rel relloc="3">going</rel>
        <arg f="" n="0" start="0" end="0">He</arg>
        <arg f="TMP" n="m" start="2" end="2">still</arg>
        <arg f="TMP" n="m" start="4" end="11">two-to-three times a day which was his norm.</arg>
      </example>
      <example src="" name="go-v: in case you couldn't figure out arg 1">
        <text>Mary told mom that the dog went number 2 on the rug.</text>
        <rel relloc="6">went</rel>
        <arg f="" n="0" start="4" end="5">the dog</arg>
        <arg f="" n="1" start="7" end="8">number 2</arg>
        <arg f="LOC" n="m" start="9" end="11">on the rug.</arg>
      </example>
      <note>GO-V NOTES: No VNcls. (from go.29-v)</note>
    </roleset>
    <roleset id="go.31" name="an attempt, effort">
      <aliases>
        <alias pos="n">go</alias>
        <alias pos="l">have_go</alias>
        <alias pos="l">give_go</alias>
      </aliases>
      <roles>
        <role descr="Agent, entity trying something" f="PAG" n="0"/>
        <role descr="Thing attempted" f="PPT" n="1"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="FrameNet" class="Attempt" version="1.7" confidence="0.8" src="manual+strict-conv"/>
      </lexlinks>
      <example src="web" name="go-n: All args, nominal">
        <text>Alfie backstage getting ready for his go at Elvis.</text>
        <rel relloc="6">go</rel>
        <arg f="" n="0" start="5" end="5">his</arg>
        <arg f="" n="1" start="7" end="8">at Elvis.</arg>
      </example>
      <note>GO-N NOTES: Roleset based on instances in BOLT P01, part 4. Loosely based on attempt-v.01. Be careful because "have a go" is a roleset for "have" (have.10), so it shouldn't be treated as an LV. (from go.01-n)</note>
    </roleset>
    <roleset id="go.32" name="attack or insult">
      <aliases>
        <alias pos="n">go</alias>
        <alias pos="l">have_go</alias>
      </aliases>
      <roles>
        <role descr="attacker" f="PAG" n="0"/>
        <role descr="attacked, insulted entity" f="PPT" n="1"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks/>
      <example src="" name="go-n: All args, within LVC again">
        <text>I'd like to make this clear: It's not the Muslims *ICH*-3 whnp we're having a go at [but the officials]-3.</text>
        <rel relloc="15">go</rel>
        <arg f="SLC" n="m" start="8" end="10">the Muslims *ICH*-3</arg>
        <arg f="" n="0" start="2" end="2">to</arg>
        <arg f="LVB" n="m" start="13" end="13">having</arg>
        <arg f="" n="1" start="11" end="11">whnp</arg>
      </example>
      <example src="web" name="go-n: All args, with cause, again LVC">
        <text>She had a go at him for being late.</text>
        <rel relloc="3">go</rel>
        <arg f="" n="0" start="0" end="0">She</arg>
        <arg f="LVB" n="m" start="1" end="1">had</arg>
        <arg f="" n="1" start="4" end="5">at him</arg>
        <arg f="CAU" n="m" start="6" end="8">for being late.</arg>
      </example>
      <note>GO-N NOTES: Roleset based on instances in BOLT P01, part 4. Loosely based on attack-v.01. (from go.02-n)</note>
    </roleset>
  </predicate>
  <predicate lemma="go_on">
    <roleset id="go_on.15" name="go on: occur, continue">
      <aliases>
        <alias pos="v">go_on</alias>
        <alias pos="j">ongoing</alias>
      </aliases>
      <roles>
        <role descr="thing/entity continuing/ occuring" f="PAG" n="1">
          <rolelinks>
            <rolelink resource="VerbNet" class="begin-55.1" version="verbnet3.3">agent</rolelink>
          </rolelinks>
        </role>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="FrameNet" class="Process_continue" version="1.7" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="VerbNet" class="begin-55.1" version="verbnet3.3" confidence="0.8" src="manual+strict-conv"/>
      </lexlinks>
      <example src="ergative" name="go_on-v: ergative">
        <text>The professor's droning voice goes on endlessly.</text>
        <rel relloc="4 5">goes on</rel>
        <arg f="" n="1" start="0" end="3">The professor's droning voice</arg>
        <arg f="MNR" n="m" start="6" end="6">endlessly.</arg>
      </example>
      <example src="transitive" name="go_on-v: transitive">
        <text>A state court judge has allowed the charity to go on *trace* soliciting funds.</text>
        <rel relloc="9 10">go on</rel>
        <arg f="" n="1" start="11" end="13">*trace* soliciting funds.</arg>
      </example>
      <note>GO_ON-V NOTES: Member of VNcls begin-55.1. (from go.15-v)</note>
      <note>ONGOING_ON-J NOTES: Automatically created by Julia as an alias file for unification. (from ongoing.15-j)</note>
    </roleset>
    <roleset id="go_on.25" name="continue speaking">
      <aliases>
        <alias pos="v">go_on</alias>
      </aliases>
      <roles>
        <role descr="speaker" f="PAG" n="0">
          <rolelinks>
            <rolelink resource="FrameNet" class="Speak_on_topic" version="1.7">speaker</rolelink>
          </rolelinks>
        </role>
        <role descr="utterance" f="PPT" n="1">
          <rolelinks>
            <rolelink resource="FrameNet" class="Speak_on_topic" version="1.7">topic</rolelink>
          </rolelinks>
        </role>
        <role descr="listener, audience spoken to" f="GOL" n="2">
          <rolelinks>
            <rolelink resource="FrameNet" class="Speak_on_topic" version="1.7">audience</rolelink>
          </rolelinks>
        </role>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="FrameNet" class="Speak_on_topic" version="1.7" confidence="0.8" src="manual+strict-conv"/>
      </lexlinks>
      <example src="He goes on for a while..." name="go_on-v: He goes on for a while...">
        <text>He goes on , By *PRO* putting the underlying origin of the , uh , street children class in Egypt under the microscope , you will find that one of the most dangerous reasons behind their growth is the chaotic migration from the countryside to the cities , and to a certain extent , the ruralization of the cities and the urbanization of the countryside .</text>
        <rel relloc="1 2">goes on</rel>
        <arg f="" n="0" start="0" end="0">He</arg>
        <arg f="" n="1" start="4" end="65">By *PRO* putting the underlying origin of the , uh , street children class in Egypt under the microscope , you will find that one of the most dangerous reasons behind their growth is the chaotic migration from the countryside to the cities , and to a certain extent , the ruralization of the cities and the urbanization of the countryside .</arg>
      </example>
      <note>GO_ON-V NOTES: Roleset based on instances in webtext-p2.5 (2500-2999). Comparison to other communication verbs. Framed by Claire (from go.25-v)</note>
    </roleset>
  </predicate>
  <predicate lemma="go_off">
    <roleset id="go_off.16" name="become on">
      <aliases>
        <alias pos="v">go_off</alias>
      </aliases>
      <roles>
        <role descr="thing becoming on, exploding" f="PPT" n="1"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <example src="bomb goes off" name="go_off-v: bomb goes off">
        <text>It's [a time bomb]-1 just waiting *trace*-1 to go off.</text>
        <rel relloc="8 9">go off.</rel>
        <arg f="" n="1" start="6" end="6">*trace*-1</arg>
      </example>
      <note>GO_OFF-V NOTES: No VNcls. (from go.16-v)</note>
    </roleset>
  </predicate>
  <predicate lemma="go_out">
    <roleset id="go_out.17" name="leave">
      <aliases>
        <alias pos="v">go_out</alias>
      </aliases>
      <roles>
        <role descr="entity leaving" f="PAG" n="0"/>
        <role descr="place left" f="PPT" n="1"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="FrameNet" class="Departing" version="1.7" confidence="0.8" src="manual+strict-conv"/>
      </lexlinks>
      <example src="like a lamb" name="go_out-v: like a lamb">
        <text>Airlines in 1989 came in like a bang and are going out like a whimper.</text>
        <rel relloc="10 11">going out</rel>
        <arg f="" n="1" start="0" end="2">Airlines in 1989</arg>
        <arg f="MNR" n="m" start="12" end="14">like a whimper.</arg>
      </example>
      <note>GO_OUT-V NOTES: Related to VNcls escape-51.1-2, but verb particle construction is not member. (from go.17-v)</note>
    </roleset>
    <roleset id="go_out.18" name="extinguish">
      <aliases>
        <alias pos="v">go_out</alias>
      </aliases>
      <roles>
        <role descr="thing being extinguished" f="PPT" n="1"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <example src="" name="go_out-v: nirvana">
        <text>The light went out.</text>
        <rel relloc="2 3">went out.</rel>
        <arg f="" n="1" start="0" end="1">The light</arg>
      </example>
      <example src="" name="go_out-v">
        <text>Well unless of course the third compressor he put in the car goes out.</text>
        <rel relloc="12 13">goes out.</rel>
        <arg f="" n="1" start="4" end="11">the third compressor he put in the car</arg>
      </example>
      <note>GO_OUT-V NOTES: (from go.18-v)</note>
    </roleset>
    <roleset id="go_out.34" name="date">
      <aliases>
        <alias pos="v">go_out</alias>
      </aliases>
      <roles>
        <role descr="First dater" f="PAG" n="0"/>
        <role descr="Second dater" f="PAG" n="1"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <example src="" name="go_out-v: romance">
        <text>No , he tells Yomna a couple of nice words and goes out with her to fool around and then he would n't talk to her again , he 's dirty and she allows him to degrade her</text>
        <rel relloc="11 12">goes out</rel>
        <arg f="DIS" n="m" start="0" end="0">No</arg>
        <arg f="" n="0" start="2" end="2">he</arg>
        <arg f="" n="1" start="13" end="14">with her</arg>
        <arg f="PRP" n="m" start="15" end="17">to fool around</arg>
      </example>
      <note>GO_OUT-V NOTES: Added by Julia for BOLT</note>
    </roleset>
  </predicate>
  <predicate lemma="go_back">
    <roleset id="go_back.19" name="return to being">
      <aliases>
        <alias pos="v">go_back</alias>
      </aliases>
      <roles>
        <role descr="thing going back to previous state" f="PAG" n="1">
          <rolelinks>
            <rolelink resource="VerbNet" class="convert-26.6.2" version="verbnet3.3">agent</rolelink>
          </rolelinks>
        </role>
        <role descr="previous state" f="DIR" n="2">
          <rolelinks>
            <rolelink resource="VerbNet" class="convert-26.6.2" version="verbnet3.3">source</rolelink>
          </rolelinks>
        </role>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="FrameNet" class="Going_back_on_a_commitment" version="1.7" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="VerbNet" class="convert-26.6.2" version="verbnet3.3" confidence="0.8" src="manual+strict-conv"/>
      </lexlinks>
      <example src="return" name="go_back-v: return">
        <text>The board and UAL's management can't go back to business as usual.</text>
        <rel relloc="6 7">go back</rel>
        <arg f="" n="1" start="0" end="4">The board and UAL's management</arg>
        <arg f="MOD" n="m" start="6" end="6">go</arg>
        <arg f="NEG" n="m" start="5" end="5">can't</arg>
        <arg f="" n="2" start="8" end="11">to business as usual.</arg>
      </example>
      <note>GO_BACK-V NOTES: Cf. get, return. Member of VNcls convert-26.6.2. (from go.19-v)</note>
    </roleset>
  </predicate>
  <predicate lemma="go_through">
    <roleset id="go_through.20" name="come to completion">
      <aliases>
        <alias pos="v">go_through</alias>
      </aliases>
      <roles>
        <role descr="agent" f="PAG" n="0"/>
        <role descr="thing coming to completion" f="PPT" n="1"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <example src="let's make a deal" name="go_through-v: let's make a deal">
        <text>We're in no way committed to a deal going through at all.</text>
        <rel relloc="8 9">going through</rel>
        <arg f="" n="1" start="6" end="7">a deal</arg>
        <arg f="ADV" n="m" start="10" end="11">at all.</arg>
      </example>
      <example src="" name="go_through-v: both args">
        <text>Has anyone else got stuff cheap like this and the seller went through with it or not ?</text>
        <rel relloc="11 12">went through</rel>
        <arg f="" n="0" start="9" end="10">the seller</arg>
        <arg f="" n="1" start="13" end="14">with it</arg>
      </example>
      <note>GO_THROUGH-V NOTES: Note the distinction between this and other "go through" usages(physical motion through a medium, undergoing some experience) (from go.20-v)</note>
    </roleset>
  </predicate>
  <predicate lemma="go_over">
    <roleset id="go_over.26" name="review, discuss, analyze, explain">
      <aliases>
        <alias pos="v">go_over</alias>
      </aliases>
      <roles>
        <role descr="reviewer" f="PAG" n="0">
          <rolelinks>
            <rolelink resource="VerbNet" class="assessment-34.1" version="verbnet3.3">agent</rolelink>
          </rolelinks>
        </role>
        <role descr="thing reviewed, gone over" f="PPT" n="1">
          <rolelinks>
            <rolelink resource="VerbNet" class="assessment-34.1" version="verbnet3.3">theme</rolelink>
          </rolelinks>
        </role>
        <role descr="attribute" f="PRD" n="2"/>
        <role descr="gone over with whom" f="COM" n="m"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="VerbNet" class="assessment-34.1" version="verbnet3.3" confidence="0.8" src="manual+strict-conv"/>
      </lexlinks>
      <example src="" name="go_over-v: Arg0,1, COM">
        <text>The surgeon went over the procedure with the nurses before beginning.</text>
        <rel relloc="2 3">went over</rel>
        <arg f="" n="0" start="0" end="1">The surgeon</arg>
        <arg f="" n="1" start="4" end="5">the procedure</arg>
        <arg f="COM" n="m" start="6" end="8">with the nurses</arg>
        <arg f="TMP" n="m" start="9" end="10">before beginning.</arg>
      </example>
      <note>GO_OVER-V NOTES: compare to review, analyze (from go.26-v)</note>
    </roleset>
    <roleset id="go_over.30" name="be received, create an impression">
      <aliases>
        <alias pos="v">go_over</alias>
      </aliases>
      <roles>
        <role descr="thing being received" f="PAG" n="1"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks/>
      <example src="BOLT" name="go_over-v: with MNR">
        <text>While I do not underestimate the stupidity of the American voter , Romney s Gorden Gekko greed is good past is nt going togo over very well this year .</text>
        <rel relloc="18 24">good over</rel>
        <arg f="MNR" n="m" start="25" end="26">very well</arg>
        <arg f="TMP" n="m" start="27" end="28">this year</arg>
      </example>
      <note>GO_OVER-V NOTES: Added by Julia based on BOLT. No VNcls. (from go.30-v)</note>
    </roleset>
  </predicate>
  <predicate lemma="go_down">
    <roleset id="go_down.27" name="happen">
      <aliases>
        <alias pos="v">go_down</alias>
      </aliases>
      <roles>
        <role descr="thing happening" f="PAG" n="1"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <example src="" name="go_down-v: from BOLT">
        <text>If ahmadinejad did say this , does he have any info as to what-2 *-2 is gon [*]na go down ?</text>
        <rel relloc="18 19">go down</rel>
        <arg f="" n="1" start="14" end="14">*-2</arg>
      </example>
      <note>GO_DOWN-V NOTES: Added by Julia based on BOLT. No VNcls. (from go.27-v)</note>
    </roleset>
  </predicate>
  <predicate lemma="undergo">
    <roleset id="undergo.28" name="experience, undergo">
      <aliases>
        <alias pos="v">undergo</alias>
        <alias pos="v">under_go</alias>
      </aliases>
      <roles>
        <role descr="experiencer" f="PPT" n="1"/>
        <role descr="experienced" f="PAG" n="2"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="FrameNet" class="Undergoing" version="1.7" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="onsense" version="on5" class="undergo-v.1" src="annot-overlap" confidence="0.1">22</lexlink>
      </lexlinks>
      <example src="" name="undergo-v: pretty typical">
        <text>Periods before the advent of futures or program trading were often more volatile, usually when fundamental market conditions were undergoing change (1973-75, 1937-40, and 1928-33 for example).</text>
        <rel relloc="19">undergoing</rel>
        <arg f="" n="1" start="15" end="17">fundamental market conditions</arg>
        <arg f="" n="2" start="20" end="20">change</arg>
      </example>
      <example src="" name="under_go-v: both args">
        <text>Patient under went neoadjuvant chemotherapy and radiation</text>
        <rel relloc="1">under</rel>
        <arg f="" n="1" start="0" end="0">Patient</arg>
        <arg f="" n="2" start="3" end="6">neoadjuvant chemotherapy and radiation</arg>
      </example>
      <note>UNDERGO-V NOTES: No Vncls. Comparison with 'go through'. (from undergo.01-v)</note>
      <note>UNDER_GO-V NOTES: Based on tempral and stratified data. Comparison to go.12. Framed by Katie. (from go.28-v)</note>
    </roleset>
  </predicate>
  <predicate lemma="gone">
    <roleset id="gone.33" name="telling time: after X o'clock">
      <aliases>
        <alias pos="j">gone</alias>
      </aliases>
      <roles>
        <role descr="time stamp that has passed" f="TMP" n="1"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <example src="" name="gone-j">
        <text>Teacher , last night it was gone seven clock when I 'd finished electron microscopy , and then I went out to have something to eat .</text>
        <rel relloc="6">gone</rel>
        <arg f="DIS" n="m" start="0" end="0">Teacher</arg>
        <arg f="TMP" n="m" start="2" end="3">last night</arg>
        <arg f="" n="1" start="7" end="8">seven clock</arg>
        <arg f="TMP" n="m" start="9" end="14">when I 'd finished electron microscopy</arg>
      </example>
      <note>GONE-J NOTES: Added by Julia for BOLT. Don't tag the dummy "it"</note>
    </roleset>
  </predicate>
</frameset>
