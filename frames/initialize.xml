<?xml version='1.0' encoding='UTF-8'?>
<frameset>
  <predicate lemma="initialize">
    <roleset id="initialize.01" name="set to a starting value, format">
      <aliases>
        <alias pos="v">initialize</alias>
        <alias pos="n">initialization</alias>
        <alias pos="n">initializated</alias>
      </aliases>
      <roles>
        <role descr="agent" f="PAG" n="0"/>
        <role descr="text/data formatted" f="PPT" n="1"/>
        <role descr="set at, formatted as" f="PRD" n="2"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="2019" inuse="-"/>
      </usagenotes>
      <lexlinks/>
      <example src="" name="initialize-v: with arg0 and arg1">
        <text>At most, give a hard connecting point to initialize the fault recorder for this line.</text>
        <rel relloc="8">initialize</rel>
        <arg f="" n="0" start="6" end="6">point</arg>
        <arg f="" n="1" start="9" end="14">the fault recorder for this line.</arg>
      </example>
      <example src="internet" name="initialize-v: with arg2">
        <text>Why should you check a static variable for nil if it was initialized to nil on the previous line?</text>
        <rel relloc="12">initialized</rel>
        <arg f="" n="1" start="10" end="10">it</arg>
        <arg f="" n="2" start="13" end="14">to nil</arg>
        <arg f="LOC" n="m" start="15" end="18">on the previous line?</arg>
      </example>
      <note>Based on Bolt data. Comparison to formatting.01 and set.01. Framed by Katie.</note>
    </roleset>
  </predicate>
</frameset>
