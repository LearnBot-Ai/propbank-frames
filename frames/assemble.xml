<?xml version='1.0' encoding='UTF-8'?>
<frameset>
  <predicate lemma="assemble">
    <roleset id="assemble.01" name="build, creation">
      <aliases>
        <alias pos="v">assemble</alias>
        <alias pos="n">assembly</alias>
      </aliases>
      <roles>
        <role descr="builder" f="PAG" n="0">
          <rolelinks>
            <rolelink resource="VerbNet" class="build-26.1" version="verbnet3.3">agent</rolelink>
            <rolelink resource="FrameNet" class="Building" version="1.7">agent</rolelink>
          </rolelinks>
        </role>
        <role descr="construction" f="PRD" n="1">
          <rolelinks>
            <rolelink resource="VerbNet" class="build-26.1" version="verbnet3.3">product</rolelink>
            <rolelink resource="FrameNet" class="Building" version="1.7">created_entity</rolelink>
            <rolelink resource="FrameNet" class="Come_together" version="1.7">individuals</rolelink>
          </rolelinks>
        </role>
        <role descr="material, start state" f="VSP" n="2">
          <rolelinks>
            <rolelink resource="VerbNet" class="build-26.1" version="verbnet3.3">material</rolelink>
            <rolelink resource="FrameNet" class="Building" version="1.7">components</rolelink>
          </rolelinks>
        </role>
        <role descr="end state" f="PRD" n="4">
          <rolelinks>
            <rolelink resource="VerbNet" class="build-26.1" version="verbnet3.3">product</rolelink>
            <rolelink resource="FrameNet" class="Building" version="1.7">created_entity</rolelink>
          </rolelinks>
        </role>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="2019" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="FrameNet" class="Come_together" version="1.7" confidence="0.5" src="manual"/>
        <lexlink resource="FrameNet" class="Building" version="1.7" confidence="0.5" src="manual"/>
        <lexlink resource="FrameNet" class="Creating" version="1.7" confidence="0.5" src="manual"/>
        <lexlink resource="VerbNet" class="build-26.1" version="verbnet3.3" confidence="0.5" src="manual"/>
        <lexlink resource="AidaOntology" version="Jan2019" class="Manufacture.Artifact.Build" confidence="0.1" src="reo-expansion"/>
        <lexlink resource="AidaOntology" version="Jan2019" class="Manufacture.Artifact.CreateManufacture" confidence="0.1" src="reo-expansion"/>
        <lexlink resource="onsense" version="on5" class="assemble-v.1" src="annot-overlap" confidence="0.1">6</lexlink>
      </lexlinks>
      <example src="" name="basic frame, no start/end states">
        <text> The Dearborn, Mich., auto maker ran a loss of $37 million on assembling and marketing cars in the U.S.</text>
        <rel relloc="13">assembling</rel>
        <arg f="" n="0" start="1" end="5">The Dearborn, Mich., auto maker</arg>
        <arg f="" n="1" start="16" end="16">cars</arg>
        <arg f="LOC" n="m" start="17" end="19">in the U.S.</arg>
      </example>
      <example src="ontonotes mz/sinorama/10/ectb_1009" name="ARG0 and ARG1 and ARG2">
        <text>You can assemble a computer completely from parts made within 50 kilometers . "</text>
        <rel relloc="2">assemble</rel>
        <arg f="" n="0" start="0" end="0">You</arg>
        <arg f="MOD" n="m" start="1" end="1">can</arg>
        <arg f="" n="1" start="3" end="4">a computer</arg>
        <arg f="EXT" n="m" start="5" end="5">completely</arg>
        <arg f="" n="2" start="6" end="11">from parts made within 50 kilometers</arg>
      </example>
      <example src="ON sense 3" name="Arg 1 only">
        <text>The assembly of the new bicycle took all day.</text>
        <rel relloc="1">assembly</rel>
        <arg f="" n="1" start="2" end="5">of the new bicycle</arg>
      </example>
      <example src="invented" name="Args 0, 1, 4">
        <text>John's assembly of a pink huffy from a kit into a mountain-biking machine shocked Mary.</text>
        <rel relloc="1">assembly</rel>
        <arg f="" n="0" start="0" end="0">John's</arg>
        <arg f="" n="1" start="2" end="5">of a pink huffy</arg>
        <arg f="" n="2" start="6" end="8">from a kit</arg>
        <arg f="" n="4" start="9" end="12">into a mountain-biking machine</arg>
      </example>
      <note>ASSEMBLE-V NOTES: Frames file for 'assemble' based on sentences in financial subcorpus. Verbnet class build-26.1. (from assemble.01-v)</note>
      <note>ASSEMBLY-N NOTES: Roleset based on verb entry assemble.01, OntoNotes grouping assembly-n sense 3; maps to VN class build-26.1. Framed by Claire. (from assembly.01-n)</note>
      <note>Might be hard to get both start and end state in a single example.But who knows? (from assemble.01-v)
Don't really know why end state is arg4, but it's like this with other "build" verbs so... (from assembly.01-n)</note>
    </roleset>
    <roleset id="assemble.02" name="group, grouping together">
      <aliases>
        <alias pos="n">assembly</alias>
        <alias pos="v">assemble</alias>
      </aliases>
      <roles>
        <role descr="agent, entity causing some grouping" f="PAG" n="0">
          <rolelinks>
            <rolelink resource="VerbNet" class="herd-47.5.2" version="verbnet3.3">agent</rolelink>
            <rolelink resource="FrameNet" class="Gathering_up" version="1.7">agent</rolelink>
          </rolelinks>
        </role>
        <role descr="theme, thing being included in some group" f="PPT" n="1">
          <rolelinks>
            <rolelink resource="VerbNet" class="herd-47.5.2" version="verbnet3.3">theme</rolelink>
            <rolelink resource="FrameNet" class="Gathering_up" version="1.7">individuals</rolelink>
          </rolelinks>
        </role>
        <role descr="group" f="PRD" n="2"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="2019" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="FrameNet" class="Gathering_up" version="1.7" confidence="0.5" src="manual"/>
        <lexlink resource="FrameNet" class="Congregating" version="UNK" confidence="0.5" src="manual"/>
        <lexlink resource="VerbNet" class="herd-47.5.2" version="verbnet3.3" confidence="0.5" src="manual"/>
        <lexlink resource="ERE" class="Transportperson" version="rich" confidence="0.1" src="reo-expansion"/>
        <lexlink resource="onsense" version="on5" class="assemble-v.2" src="annot-overlap" confidence="0.1">13</lexlink>
        <lexlink resource="onsense" version="on5" class="assemble-v.1" src="annot-overlap" confidence="0.1">7</lexlink>
      </lexlinks>
      <example src="" name="no group">
        <text>Commodore has assembled an experienced management team.</text>
        <rel relloc="2">assembled</rel>
        <arg f="" n="0" start="0" end="0">Commodore</arg>
        <arg f="" n="1" start="3" end="6">an experienced management team.</arg>
      </example>
      <example src="ontonotes mz/sinorama/10/ectb_1068" name="ARG1 and ARG0">
        <text>The more you look at the parts you 've already assembled , the more disjointed and ugly they seem ; but it 's the parts you ca n't finish that you long for more and more , even though you know there 's precious little hope you 'll ever get them done . "</text>
        <rel relloc="10">assembled</rel>
        <arg f="" n="1" start="5" end="6">the parts</arg>
        <arg f="" n="0" start="2" end="2">you</arg>
        <arg f="TMP" n="m" start="9" end="9">already</arg>
      </example>
      <example src="ON sense 2" name="Arg 1 &amp; LOC">
        <text>We called for the assembly of all disgruntled citizens at the town square.</text>
        <rel relloc="4">assembly</rel>
        <arg f="" n="1" start="5" end="8">of all disgruntled citizens</arg>
        <arg f="LOC" n="m" start="9" end="12">at the town square.</arg>
      </example>
      <example src="" name="Args 1 &amp; 2">
        <text>The assembly of the different governing bodies into one major department was his finest achievement as governor.</text>
        <rel relloc="1">assembly</rel>
        <arg f="" n="1" start="3" end="6">the different governing bodies</arg>
        <arg f="" n="2" start="7" end="10">into one major department</arg>
      </example>
      <example src="web" name="All arguments">
        <text>It required days to transform his assembly of casual auxiliaries into a semblance of the efficient righting force he had professed to lead.</text>
        <rel relloc="6">assembly</rel>
        <arg f="" n="0" start="5" end="5">his</arg>
        <arg f="" n="1" start="7" end="9">of casual auxiliaries</arg>
        <arg f="" n="2" start="10" end="22">into a semblance of the efficient righting force he had professed to lead.</arg>
      </example>
      <note>ASSEMBLE-V NOTES: VerbNet class herd-47.5.2. (from assemble.02-v)</note>
      <note>ASSEMBLY-N NOTES: Roleset based on assemble.02, OntoNotes grouping assembly-n sense 2; maps to VN class herd-47.5.2. Framed by Claire. (from assembly.02-n)</note>
      <note>That could go either way; avoid using Arg2 unless both Arg1 and Arg2are explicit. (from assemble.02-v)</note>
    </roleset>
  </predicate>
</frameset>
