<?xml version="1.0" ?>
<frameset>
   <predicate lemma="assemble">
      <roleset id="assemble.01" name="build, creation">
         <aliases>
            <alias pos="v">assemble</alias>
            <alias pos="n">assembly</alias>
         </aliases>
         <roles>
            <role descr="builder" f="PAG" n="0">
               <rolelinks>
                  <rolelink class="build-26.1" resource="VerbNet" version="verbnet3.3">agent</rolelink>
                  <rolelink class="Building" resource="FrameNet" version="1.7">agent</rolelink>
                  <rolelink class="build-26.1" resource="VerbNet" version="verbnet3.4">agent</rolelink>
               </rolelinks>
            </role>
            <role descr="construction" f="PRD" n="1">
               <rolelinks>
                  <rolelink class="build-26.1" resource="VerbNet" version="verbnet3.3">product</rolelink>
                  <rolelink class="Building" resource="FrameNet" version="1.7">created_entity</rolelink>
                  <rolelink class="Come_together" resource="FrameNet" version="1.7">individuals</rolelink>
                  <rolelink class="build-26.1" resource="VerbNet" version="verbnet3.4">product</rolelink>
               </rolelinks>
            </role>
            <role descr="material, start state" f="VSP" n="2">
               <rolelinks>
                  <rolelink class="build-26.1" resource="VerbNet" version="verbnet3.3">material</rolelink>
                  <rolelink class="Building" resource="FrameNet" version="1.7">components</rolelink>
                  <rolelink class="build-26.1" resource="VerbNet" version="verbnet3.4">material</rolelink>
               </rolelinks>
            </role>
            <role descr="end state" f="PRD" n="4">
               <rolelinks>
                  <rolelink class="build-26.1" resource="VerbNet" version="verbnet3.3">product</rolelink>
                  <rolelink class="Building" resource="FrameNet" version="1.7">created_entity</rolelink>
                  <rolelink class="build-26.1" resource="VerbNet" version="verbnet3.4">product</rolelink>
               </rolelinks>
            </role>
         </roles>
         <usagenotes>
            <usage resource="PropBank" version="1.0" inuse="+" />
            <usage resource="PropBank" version="2.1.5" inuse="+" />
            <usage resource="PropBank" version="3.1" inuse="+" />
            <usage resource="PropBank" version="3.4" inuse="+" />
            <usage resource="AMR" version="2019" inuse="+" />
            <usage resource="PropBank" version="Flickr 1.0" inuse="+" />
            <usage resource="AMR" version="Spatial 1.0" inuse="+" />
            <usage resource="AMR" version="THYME 1.0" inuse="+" />
         </usagenotes>
         <lexlinks>
            <lexlink class="Come_together" confidence="0.8" resource="FrameNet" src="manual+strict-conv" version="1.7"/>
            <lexlink class="Building" confidence="0.8" resource="FrameNet" src="manual+strict-conv" version="1.7"/>
            <lexlink class="Creating" confidence="0.8" resource="FrameNet" src="manual+strict-conv" version="1.7"/>
            <lexlink class="build-26.1" confidence="0.8" resource="VerbNet" src="manual+strict-conv" version="verbnet3.3"/>
            <lexlink class="Manufacture.Artifact.Build" confidence="0.1" resource="AidaOntology" src="reo-expansion" version="Jan2019"/>
            <lexlink class="Manufacture.Artifact.CreateManufacture" confidence="0.1" resource="AidaOntology" src="reo-expansion" version="Jan2019"/>
            <lexlink class="assemble-v.1" confidence="0.1" resource="onsense" src="annot-overlap" version="on5">6</lexlink>
            <lexlink class="build-26.1" confidence="1.0" resource="VerbNet" src="manualchecks" version="verbnet3.4"/>
         </lexlinks>
         <example name="basic frame, no start/end states" src="">
            <text> The Dearborn, Mich., auto maker ran a loss of $37 million on assembling and marketing cars in the U.S.</text>
            <rel relloc="13">assembling</rel>
            <arg end="5" f="" n="0" start="1">The Dearborn, Mich., auto maker</arg>
            <arg end="16" f="" n="1" start="16">cars</arg>
            <arg end="19" f="LOC" n="m" start="17">in the U.S.</arg>
         </example>
         <example name="ARG0 and ARG1 and ARG2" src="ontonotes mz/sinorama/10/ectb_1009">
            <text>You can assemble a computer completely from parts made within 50 kilometers . &quot;</text>
            <rel relloc="2">assemble</rel>
            <arg end="0" f="" n="0" start="0">You</arg>
            <arg end="1" f="MOD" n="m" start="1">can</arg>
            <arg end="4" f="" n="1" start="3">a computer</arg>
            <arg end="5" f="EXT" n="m" start="5">completely</arg>
            <arg end="11" f="" n="2" start="6">from parts made within 50 kilometers</arg>
         </example>
         <example name="Arg 1 only" src="ON sense 3">
            <text>The assembly of the new bicycle took all day.</text>
            <rel relloc="1">assembly</rel>
            <arg end="5" f="" n="1" start="2">of the new bicycle</arg>
         </example>
         <example name="Args 0, 1, 4" src="invented">
            <text>John's assembly of a pink huffy from a kit into a mountain-biking machine shocked Mary.</text>
            <rel relloc="1">assembly</rel>
            <arg end="0" f="" n="0" start="0">John's</arg>
            <arg end="5" f="" n="1" start="2">of a pink huffy</arg>
            <arg end="8" f="" n="2" start="6">from a kit</arg>
            <arg end="12" f="" n="4" start="9">into a mountain-biking machine</arg>
         </example>
         <note>ASSEMBLE-V NOTES: Frames file for 'assemble' based on sentences in financial subcorpus. Verbnet class build-26.1. (from assemble.01-v)</note>
         <note>ASSEMBLY-N NOTES: Roleset based on verb entry assemble.01, OntoNotes grouping assembly-n sense 3; maps to VN class build-26.1. Framed by Claire. (from assembly.01-n)</note>
         <note>Might be hard to get both start and end state in a single example.But who knows? (from assemble.01-v)
Don't really know why end state is arg4, but it's like this with other &quot;build&quot; verbs so... (from assembly.01-n)</note>
      </roleset>
      <roleset id="assemble.02" name="group, grouping together">
         <aliases>
            <alias pos="n">assembly</alias>
            <alias pos="v">assemble</alias>
         </aliases>
         <roles>
            <role descr="agent, entity causing some grouping" f="PAG" n="0">
               <rolelinks>
                  <rolelink class="herd-47.5.2" resource="VerbNet" version="verbnet3.3">agent</rolelink>
                  <rolelink class="Gathering_up" resource="FrameNet" version="1.7">agent</rolelink>
                  <rolelink class="herd-47.5.2" resource="VerbNet" version="verbnet3.4">agent</rolelink>
               </rolelinks>
            </role>
            <role descr="theme, thing being included in some group" f="PPT" n="1">
               <rolelinks>
                  <rolelink class="herd-47.5.2" resource="VerbNet" version="verbnet3.3">theme</rolelink>
                  <rolelink class="Gathering_up" resource="FrameNet" version="1.7">individuals</rolelink>
                  <rolelink class="herd-47.5.2" resource="VerbNet" version="verbnet3.4">theme</rolelink>
               </rolelinks>
            </role>
            <role descr="group" f="PRD" n="2">
               <rolelinks/>
            </role>
         </roles>
         <usagenotes>
            <usage resource="PropBank" version="1.0" inuse="+" />
            <usage resource="PropBank" version="2.1.5" inuse="+" />
            <usage resource="PropBank" version="3.1" inuse="+" />
            <usage resource="PropBank" version="3.4" inuse="+" />
            <usage resource="AMR" version="2019" inuse="+" />
            <usage resource="PropBank" version="Flickr 1.0" inuse="+" />
            <usage resource="AMR" version="Spatial 1.0" inuse="+" />
            <usage resource="AMR" version="THYME 1.0" inuse="+" />
         </usagenotes>
         <lexlinks>
            <lexlink class="Gathering_up" confidence="0.8" resource="FrameNet" src="manual+strict-conv" version="1.7"/>
            <lexlink class="Congregating" confidence="0.0" resource="FrameNet" src="manual+strict-conv" version="UNK"/>
            <lexlink class="herd-47.5.2" confidence="0.8" resource="VerbNet" src="manual+strict-conv" version="verbnet3.3"/>
            <lexlink class="Transportperson" confidence="0.1" resource="ERE" src="reo-expansion" version="rich"/>
            <lexlink class="assemble-v.2" confidence="0.1" resource="onsense" src="annot-overlap" version="on5">13</lexlink>
            <lexlink class="assemble-v.1" confidence="0.1" resource="onsense" src="annot-overlap" version="on5">7</lexlink>
            <lexlink class="herd-47.5.2" confidence="1.0" resource="VerbNet" src="manualchecks" version="verbnet3.4"/>
         </lexlinks>
         <example name="no group" src="">
            <text>Commodore has assembled an experienced management team.</text>
            <rel relloc="2">assembled</rel>
            <arg end="0" f="" n="0" start="0">Commodore</arg>
            <arg end="6" f="" n="1" start="3">an experienced management team.</arg>
         </example>
         <example name="ARG1 and ARG0" src="ontonotes mz/sinorama/10/ectb_1068">
            <text>The more you look at the parts you 've already assembled , the more disjointed and ugly they seem ; but it 's the parts you ca n't finish that you long for more and more , even though you know there 's precious little hope you 'll ever get them done . &quot;</text>
            <rel relloc="10">assembled</rel>
            <arg end="6" f="" n="1" start="5">the parts</arg>
            <arg end="2" f="" n="0" start="2">you</arg>
            <arg end="9" f="TMP" n="m" start="9">already</arg>
         </example>
         <example name="Arg 1 &amp; LOC" src="ON sense 2">
            <text>We called for the assembly of all disgruntled citizens at the town square.</text>
            <rel relloc="4">assembly</rel>
            <arg end="8" f="" n="1" start="5">of all disgruntled citizens</arg>
            <arg end="12" f="LOC" n="m" start="9">at the town square.</arg>
         </example>
         <example name="Args 1 &amp; 2" src="">
            <text>The assembly of the different governing bodies into one major department was his finest achievement as governor.</text>
            <rel relloc="1">assembly</rel>
            <arg end="6" f="" n="1" start="3">the different governing bodies</arg>
            <arg end="10" f="" n="2" start="7">into one major department</arg>
         </example>
         <example name="All arguments" src="web">
            <text>It required days to transform his assembly of casual auxiliaries into a semblance of the efficient righting force he had professed to lead.</text>
            <rel relloc="6">assembly</rel>
            <arg end="5" f="" n="0" start="5">his</arg>
            <arg end="9" f="" n="1" start="7">of casual auxiliaries</arg>
            <arg end="22" f="" n="2" start="10">into a semblance of the efficient righting force he had professed to lead.</arg>
         </example>
         <note>ASSEMBLE-V NOTES: VerbNet class herd-47.5.2. (from assemble.02-v)</note>
         <note>ASSEMBLY-N NOTES: Roleset based on assemble.02, OntoNotes grouping assembly-n sense 2; maps to VN class herd-47.5.2. Framed by Claire. (from assembly.02-n)</note>
         <note>That could go either way; avoid using Arg2 unless both Arg1 and Arg2are explicit. (from assemble.02-v)</note>
      </roleset>
   </predicate>
</frameset>
