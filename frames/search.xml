<?xml version='1.0' encoding='UTF-8'?>
<frameset>
  <predicate lemma="search">
    <roleset id="search.01" name="search, seek, seaking, looking through/for">
      <aliases>
        <alias pos="v">search</alias>
        <alias pos="n">searching</alias>
        <alias pos="n">search</alias>
      </aliases>
      <roles>
        <role descr="searcher" f="PAG" n="0">
          <rolelinks>
            <rolelink resource="VerbNet" class="search-35.2" version="verbnet3.3">agent</rolelink>
            <rolelink resource="FrameNet" class="Seeking" version="1.7">cognizer_agent</rolelink>
            <rolelink resource="FrameNet" class="Scrutiny" version="1.7">cognizer</rolelink>
          </rolelinks>
        </role>
        <role descr="Area searched" f="LOC" n="1">
          <rolelinks>
            <rolelink resource="VerbNet" class="search-35.2" version="verbnet3.3">location</rolelink>
            <rolelink resource="FrameNet" class="Seeking" version="1.7">ground</rolelink>
            <rolelink resource="FrameNet" class="Scrutiny" version="1.7">ground</rolelink>
          </rolelinks>
        </role>
        <role descr="searched for" f="PPT" n="2">
          <rolelinks>
            <rolelink resource="VerbNet" class="search-35.2" version="verbnet3.3">theme</rolelink>
            <rolelink resource="FrameNet" class="Seeking" version="1.7">sought_entity</rolelink>
            <rolelink resource="FrameNet" class="Scrutiny" version="1.7">phenomenon</rolelink>
          </rolelinks>
        </role>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="FrameNet" class="Scrutiny" version="1.7" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="FrameNet" class="Seeking" version="1.7" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="VerbNet" class="search-35.2" version="verbnet3.3" confidence="0.8" src="manual+strict-conv"/>
        <lexlink resource="onsense" version="on5" class="search-v.1" src="annot-overlap" confidence="0.1">52</lexlink>
        <lexlink resource="onsense" version="on5" class="search-n.1" src="annot-overlap" confidence="0.1">37</lexlink>
        <lexlink resource="onsense" version="on5" class="search-n.2" src="annot-overlap" confidence="0.1">3</lexlink>
        <lexlink resource="onsense" version="on5" class="search-v.2" src="annot-overlap" confidence="0.1">5</lexlink>
      </lexlinks>
      <example src="" name="typical transitive">
        <text>The board already has been searching for strong outside candidates, including food-industry executives with considerable international experience.</text>
        <rel relloc="5">searching</rel>
        <arg f="" n="0" start="0" end="1">The board</arg>
        <arg f="TMP" n="m" start="2" end="2">already</arg>
        <arg f="" n="2" start="6" end="16">for strong outside candidates, including food-industry executives with considerable international experience.</arg>
      </example>
      <example src="web" name="All arguments with (sort of creepy) purpose.">
        <text>He searched the crowd for his wife to assign her an appropriate punishment.</text>
        <rel relloc="1">searched</rel>
        <arg f="" n="0" start="0" end="0">He</arg>
        <arg f="" n="1" start="2" end="3">the crowd</arg>
        <arg f="" n="2" start="4" end="6">for his wife</arg>
        <arg f="PRP" n="m" start="7" end="12">to assign her an appropriate punishment.</arg>
      </example>
      <example src="" name="Example with 2 args">
        <text>his search for the Reuters shares</text>
        <rel relloc="1">search</rel>
        <arg f="" n="0" start="0" end="0">his</arg>
        <arg f="" n="2" start="2" end="5">for the Reuters shares</arg>
      </example>
      <example src="" name="Example with only arg 2">
        <text>the search for `` a real computer in a package so small you cantake it everywhere</text>
        <rel relloc="1">search</rel>
        <arg f="" n="2" start="2" end="15">for `` a real computer in a package so small you cantake it everywhere</arg>
      </example>
      <example src="" name="Example with 2 args">
        <text>The detective's search for clues was fruitless.</text>
        <rel relloc="2">search</rel>
        <arg f="" n="0" start="0" end="1">The detective's</arg>
        <arg f="" n="2" start="3" end="4">for clues</arg>
      </example>
      <example src="" name="Args 0 &amp; 1">
        <text>In a search earlier this week of an Aden apartment, detectives found evidence of the crime.</text>
        <rel relloc="2">search</rel>
        <arg f="TMP" n="m" start="3" end="5">earlier this week</arg>
        <arg f="" n="1" start="6" end="9">of an Aden apartment,</arg>
      </example>
      <example src="web" name="All Args">
        <text>Krauser soon begins his search of Wesker for power.</text>
        <rel relloc="4">search</rel>
        <arg f="" n="0" start="3" end="3">his</arg>
        <arg f="" n="1" start="5" end="6">of Wesker</arg>
        <arg f="" n="2" start="7" end="8">for power.</arg>
      </example>
      <example src="internet" name="all args">
        <text>Officials dropped those charges after finding no trace of ricin in Curtis' home, and no record of his searching the Internet about the poison.</text>
        <rel relloc="18">searching</rel>
        <arg f="" n="0" start="17" end="17">his</arg>
        <arg f="" n="1" start="19" end="20">the Internet</arg>
        <arg f="" n="2" start="21" end="23">about the poison.</arg>
      </example>
      <note>SEARCH-V NOTES: Comparison with 'seek'.Member of Vncls search-35.2. (from search.01-v)</note>
      <note>SEARCH-N NOTES: Roleset based on search.01. Verbnet class search-35.2. Framed by Katie. (from search.01-n)</note>
      <note>SEARCHING-N NOTES: Added by Julia based on BOLT-5, search-v.01. Corresponds to VNcls search-35.2. (from searching.01-n)</note>
    </roleset>
  </predicate>
</frameset>
