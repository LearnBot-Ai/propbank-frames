<?xml version='1.0' encoding='UTF-8'?>
<frameset>
  <predicate lemma="ensure">
    <roleset id="ensure.01" name="promise, ensure, make sure, guarantee (to do/be)">
      <aliases>
        <alias pos="v">ensure</alias>
        <alias pos="j">sure</alias>
        <alias pos="l">make_sure</alias>
      </aliases>
      <roles>
        <role descr="agent/cause" f="PAG" n="0"/>
        <role descr="to what (may require concatenation)" f="PPT" n="1"/>
        <role descr="benefactive" f="GOL" n="2"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="onsense" version="on5" class="ensure-v.1" src="annot-overlap" confidence="0.1">95</lexlink>
      </lexlinks>
      <example src="" name="ensure-v: sentential guarantee">
        <text>Merieux previously said it would ensure its bid remained open pending a final decision by Canadian regulators on whether to approve the takeover.</text>
        <rel relloc="5">ensure</rel>
        <arg f="" n="0" start="3" end="3">it</arg>
        <arg f="MOD" n="m" start="4" end="4">would</arg>
        <arg f="" n="1" start="6" end="22">its bid remained open pending a final decision by Canadian regulators on whether to approve the takeover.</arg>
      </example>
      <example src="" name="ensure-v: NP guarantee">
        <text>The complaint alleges that the price is ``unfair and grossly inadequate'' and that [the defendants]-1 are seeking *trace*-1 to ensure a ``lockup'' of the purchase of Unitel, thereby discouraging other bids.</text>
        <rel relloc="19">ensure</rel>
        <arg f="" n="0" start="17" end="17">*trace*-1</arg>
        <arg f="" n="1" start="20" end="26">a ``lockup'' of the purchase of Unitel,</arg>
      </example>
      <example src="WordNet" name="sure-j: both args">
        <text>*PRO* be sure to lock the doors</text>
        <rel relloc="2">sure</rel>
        <arg f="" n="0" start="0" end="0">*PRO*</arg>
        <arg f="" n="1" start="3" end="6">to lock the doors</arg>
      </example>
      <example src="-" name="sure-j: concatenation">
        <text>he is sure to win</text>
        <rel relloc="2">sure</rel>
        <arg f="" n="1" start="0" end="0">he</arg>
        <arg f="" n="1" start="3" end="4">to win</arg>
      </example>
      <note>ENSURE-V NOTES: Frames file for 'ensure' based on sentences in financial subcorpus. No Verbnet entry. Comparison to 'guarantee'. (from ensure.01-v predicate notes)</note>
      <note>SURE-J NOTES: Added by Julia based on WordNet. Corresponds to VNcls ensure-99. (from sure.02-j)</note>
    </roleset>
  </predicate>
  <predicate lemma="sure">
    <roleset id="sure.02" name="believing absolutely">
      <aliases>
        <alias pos="j">sure</alias>
      </aliases>
      <roles>
        <role descr="believer" f="PAG" n="0"/>
        <role descr="belief" f="PPT" n="1"/>
      </roles>
      <usagenotes>
        <usage resource="PropBank" version="3.0" inuse="+"/>
        <usage resource="AMR" version="3.0" inuse="+"/>
      </usagenotes>
      <lexlinks>
        <lexlink resource="FrameNet" class="Certainty" version="1.7" confidence="0.8" src="manual+strict-conv"/>
      </lexlinks>
      <example src="WSJ" name="sure-j: both args">
        <text>Peter Anthony , who runs an employment agency in New York , decries program trading as `` limiting the game to a few , '' but he also is n't sure it should be more strictly regulated .</text>
        <rel relloc="30">sure</rel>
        <arg f="" n="0" start="26" end="26">he</arg>
        <arg f="ADV" n="m" start="27" end="27">also</arg>
        <arg f="NEG" n="m" start="29" end="29">n't</arg>
        <arg f="" n="1" start="31" end="36">it should be more strictly regulated</arg>
      </example>
      <note>SURE-J NOTES: Added by Julia based on WSJ data. (from sure.01-j)</note>
    </roleset>
  </predicate>
</frameset>
